{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main/nextjs-15-course-main/components/Login.jsx"],"sourcesContent":["'use client'\n\nimport { useAuth } from \"@/context/AuthContext\"\nimport { useRouter } from \"next/navigation\"\nimport { useState } from \"react\"\n\nexport default function Login() {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [isRegister, setIsRegister] = useState(false)\n    const [isAuthenticating, setIsAuthenticating] = useState(false)\n\n    const { login, signup } = useAuth()\n    const router = useRouter()\n\n    const cantAuth = !email.includes('@') || password.length < 6\n\n    async function handleAuthUser() {\n        // check if email is legit and password is acceptable\n        if (cantAuth) {\n            return\n        }\n        setIsAuthenticating(true)\n\n        try {\n            if (isRegister) {\n                // then we need to register a user\n                await signup(email, password)\n            } else {\n                // otherwise they're wanting to login\n                await login(email, password)\n            }\n            // so if we get here with no error, then we've authenticated, so push to notes page\n            router.push('/notes')\n        } catch (err) {\n            console.log(err.message)\n            // challenge for you - add an error state that is conditionally rendered if there is an error and shows the error message\n        } finally {\n            setIsAuthenticating(false)\n        }\n    }\n\n    return (\n        <>\n            <div className=\"login-container\">\n                <h1 className=\"text-gradient\">SHYLINOTE</h1>\n                <h2>Organized note taking made easy</h2>\n                <p>Build your very own archinve of easily navigated and indexed information and notes.</p>\n                <div className=\"full-line\"></div>\n                <h6>{isRegister ? 'Create an account' : 'Log in'}</h6>\n                <div>\n                    <p>Email</p>\n                    <input value={email} onChange={(e) => {\n                        setEmail(e.target.value)\n                    }} type=\"text\" placeholder=\"Enter your email address\" />\n                </div>\n                <div>\n                    <p>Password</p>\n                    <input value={password} onChange={(e) => {\n                        setPassword(e.target.value)\n                    }} type=\"password\" placeholder=\"*******\" />\n                </div>\n                <button onClick={handleAuthUser} disabled={cantAuth || isAuthenticating} className=\"submit-btn\">\n                    <h6>{isAuthenticating ? 'Submitting...' : 'Submit'}</h6>\n                </button>\n                <div className=\"secondary-btns-container\">\n                    <button onClick={() => {\n                        setIsRegister(!isRegister)\n                    }} className=\"card-button-secondary\">\n                        <small>{isRegister ? 'Log in' : 'Sign up'}</small>\n                    </button>\n                    <button className=\"card-button-secondary\">\n                        <small>Forgot password?</small>\n                    </button>\n                </div>\n                <div className=\"full-line\"></div>\n                <footer>\n                    <a target=\"_blank\" href=\"https://github.com/Cintu07/shylinote\">\n                        <img alt=\"pfp\" src=\"https://avatars.githubusercontent.com/u/77163783?v=4\" />\n                        <h6>@Cintu07</h6>\n                        <i className=\"fa-brands fa-github\"></i>\n                    </a>\n                </footer>\n            </div>\n        </>\n    )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,WAAW,CAAC,MAAM,QAAQ,CAAC,QAAQ,SAAS,MAAM,GAAG;IAE3D,eAAe;QACX,qDAAqD;QACrD,IAAI,UAAU;YACV;QACJ;QACA,oBAAoB;QAEpB,IAAI;YACA,IAAI,YAAY;gBACZ,kCAAkC;gBAClC,MAAM,OAAO,OAAO;YACxB,OAAO;gBACH,qCAAqC;gBACrC,MAAM,MAAM,OAAO;YACvB;YACA,mFAAmF;YACnF,OAAO,IAAI,CAAC;QAChB,EAAE,OAAO,KAAK;YACV,QAAQ,GAAG,CAAC,IAAI,OAAO;QACvB,yHAAyH;QAC7H,SAAU;YACN,oBAAoB;QACxB;IACJ;IAEA,qBACI;kBACI,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAG,WAAU;8BAAgB;;;;;;8BAC9B,6LAAC;8BAAG;;;;;;8BACJ,6LAAC;8BAAE;;;;;;8BACH,6LAAC;oBAAI,WAAU;;;;;;8BACf,6LAAC;8BAAI,aAAa,sBAAsB;;;;;;8BACxC,6LAAC;;sCACG,6LAAC;sCAAE;;;;;;sCACH,6LAAC;4BAAM,OAAO;4BAAO,UAAU,CAAC;gCAC5B,SAAS,EAAE,MAAM,CAAC,KAAK;4BAC3B;4BAAG,MAAK;4BAAO,aAAY;;;;;;;;;;;;8BAE/B,6LAAC;;sCACG,6LAAC;sCAAE;;;;;;sCACH,6LAAC;4BAAM,OAAO;4BAAU,UAAU,CAAC;gCAC/B,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC9B;4BAAG,MAAK;4BAAW,aAAY;;;;;;;;;;;;8BAEnC,6LAAC;oBAAO,SAAS;oBAAgB,UAAU,YAAY;oBAAkB,WAAU;8BAC/E,cAAA,6LAAC;kCAAI,mBAAmB,kBAAkB;;;;;;;;;;;8BAE9C,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAO,SAAS;gCACb,cAAc,CAAC;4BACnB;4BAAG,WAAU;sCACT,cAAA,6LAAC;0CAAO,aAAa,WAAW;;;;;;;;;;;sCAEpC,6LAAC;4BAAO,WAAU;sCACd,cAAA,6LAAC;0CAAM;;;;;;;;;;;;;;;;;8BAGf,6LAAC;oBAAI,WAAU;;;;;;8BACf,6LAAC;8BACG,cAAA,6LAAC;wBAAE,QAAO;wBAAS,MAAK;;0CACpB,6LAAC;gCAAI,KAAI;gCAAM,KAAI;;;;;;0CACnB,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;gCAAE,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMrC;GAhFwB;;QAMM,0HAAA,CAAA,UAAO;QAClB,qIAAA,CAAA,YAAS;;;KAPJ","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main/nextjs-15-course-main/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}