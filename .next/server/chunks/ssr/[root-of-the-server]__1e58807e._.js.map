{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/components/TopNav.jsx"],"sourcesContent":["export default function TopNav(props) {\n    const { hello, isViewer, handleToggleViewer, handleToggleMenu, savingNote\n        , handleSaveNote } = props\n\n    return (\n        <>\n\n            <div className=\"notes-btn\">\n                <button onClick={handleToggleMenu} className=\"card-button-primary menu\">\n                    <i className=\"fa-solid fa-bars\"></i>\n                </button>\n                <button onClick={handleSaveNote} disabled={savingNote} className=\"card-button-secondary\">\n                    <h6>Save</h6>\n                    <i className=\"fa-solid fa-floppy-disk\"></i>\n                </button>\n                <button onClick={handleToggleViewer} className=\"card-button-secondary\">\n                    {isViewer ?\n                        <>\n                            <h6>Editor</h6>\n                            <i className=\"fa-solid fa-pencil\"></i>\n                        </> :\n                        <>\n                            <h6>Viewer</h6>\n                            <i className=\"fa-solid fa-check-double\"></i>\n                        </>\n                    }\n                </button>\n            </div>\n            <div className=\"full-line\"></div>\n        </>\n    )\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,OAAO,KAAK;IAChC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,UAAU,EACnE,cAAc,EAAE,GAAG;IAEzB,qBACI;;0BAEI,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAO,SAAS;wBAAkB,WAAU;kCACzC,cAAA,8OAAC;4BAAE,WAAU;;;;;;;;;;;kCAEjB,8OAAC;wBAAO,SAAS;wBAAgB,UAAU;wBAAY,WAAU;;0CAC7D,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;gCAAE,WAAU;;;;;;;;;;;;kCAEjB,8OAAC;wBAAO,SAAS;wBAAoB,WAAU;kCAC1C,yBACG;;8CACI,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;oCAAE,WAAU;;;;;;;yDAEjB;;8CACI,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;oCAAE,WAAU;;;;;;;;;;;;;;;;;;;0BAK7B,8OAAC;gBAAI,WAAU;;;;;;;;AAG3B","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/components/Editor.jsx"],"sourcesContent":["import TopNav from \"./TopNav\"\n\nexport default function Editor(props) {\n    const { text, setText } = props\n\n    return (\n        <section className=\"notes-container\">\n            <TopNav {...props} />\n            <textarea value={text} onChange={setText} placeholder=\"The mitochondria is the powerhouse of the cell\" />\n        </section>\n    )\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,OAAO,KAAK;IAChC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG;IAE1B,qBACI,8OAAC;QAAQ,WAAU;;0BACf,8OAAC,qHAAA,CAAA,UAAM;gBAAE,GAAG,KAAK;;;;;;0BACjB,8OAAC;gBAAS,OAAO;gBAAM,UAAU;gBAAS,aAAY;;;;;;;;;;;;AAGlE","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/components/MDX.jsx"],"sourcesContent":["import Markdown from \"markdown-to-jsx\";\nimport TopNav from \"./TopNav\";\n\nexport default function MDX(props) {\n    const { text } = props // gives us access to the text attribute (or the value assigned to it really)\n    const md = `# this is a header 1\n## this is a header 2\n\nhello world\n[click me](https://www.google.com)\n    `\n    return (\n        <section className=\"mdx-container\">\n            <TopNav {...props} />\n            <article>\n                <Markdown>\n                    {text.trim() || 'Hop in the editor to create a new note'}\n                </Markdown>\n            </article>\n        </section>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS,IAAI,KAAK;IAC7B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,6EAA6E;;IACpG,MAAM,KAAK,CAAC;;;;;IAKZ,CAAC;IACD,qBACI,8OAAC;QAAQ,WAAU;;0BACf,8OAAC,qHAAA,CAAA,UAAM;gBAAE,GAAG,KAAK;;;;;;0BACjB,8OAAC;0BACG,cAAA,8OAAC,gKAAA,CAAA,UAAQ;8BACJ,KAAK,IAAI,MAAM;;;;;;;;;;;;;;;;;AAKpC","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/components/SideNav.jsx"],"sourcesContent":["import { useAuth } from \"@/context/AuthContext\"\nimport { db } from \"@/firebase\"\nimport { collection, deleteDoc, doc, getDocs } from \"firebase/firestore\"\nimport { useRouter } from \"next/navigation\"\nimport { useEffect, useRef } from \"react\"\n\nexport default function SideNav(props) {\n\n    const { showNav, setShowNav, noteIds, setNoteIds, handleCreateNote, setIsViewer } = props\n    const { logout, currentUser } = useAuth()\n\n    const ref = useRef()\n    const router = useRouter()\n\n    async function deleteNote(noteIdx) {\n        try {\n            const noteRef = doc(db, 'users', currentUser.uid, 'notes', noteIdx)\n            await deleteDoc(noteRef)\n            setNoteIds((curr) => {\n                return curr.filter(idx => idx !== noteIdx)\n            })\n        } catch (err) {\n            console.log(err.message)\n        } finally { }\n    }\n\n    useEffect(() => {\n        // this is the code block that gets executed when our ref changes (so in this case it's when the ref is assigned)\n\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                setShowNav(false)\n            }\n        }\n\n        document.addEventListener('mousedown', handleClickOutside)\n        return () => {\n            // cleanup - unbind the event listener on clean up\n            document.removeEventListener('mousedown', handleClickOutside)\n        }\n\n    }, [ref])\n\n    useEffect(() => {\n        if (!currentUser) { return } // because if we don't have a user then we can't fetch anything so exit this code block\n\n        async function fetchIndexes() { // this fetches the ids of all our docuemtns\n            try {\n                const notesRef = collection(db, 'users', currentUser.uid, 'notes')\n                const snapshot = await getDocs(notesRef)\n                const notesIndexes = snapshot.docs.map((doc) => {\n                    return doc.id\n                })\n                setNoteIds(notesIndexes)\n            } catch (err) {\n                console.log(err.message)\n            } finally {\n\n            }\n        }\n        fetchIndexes()\n    }, [])\n\n    return (\n        <section ref={ref} className={\"nav \" + (showNav ? '' : ' hidden-nav ')}>\n            <h1 className=\"text-gradient\">MDNOTES</h1>\n            <h6>Easy Breezy Notes</h6>\n            <div className=\"full-line\"></div>\n            <button onClick={handleCreateNote}>\n                <h6>New note</h6>\n                <i className=\"fa-solid fa-plus\"></i>\n            </button>\n            <div className=\"notes-list\">\n                {noteIds.length == 0 ?\n                    <p>You have 0 notes</p> :\n                    noteIds.map((note, idx) => {\n                        const [n, d] = note.split('__')\n                        const date = (new Date(parseInt(d))).toString()\n\n                        return (\n                            <button onClick={() => {\n                                router.push('/notes?id=' + note)\n                                setIsViewer(true)\n                            }} key={idx} className=\"card-button-secondary list-btn\">\n                                <p>{n}</p>\n                                <small>{date.split(' ').slice(1, 4).join(' ')}</small>\n                                <div onClick={(e) => {\n                                    e.stopPropagation()\n                                    deleteNote(note)\n                                }} className=\"delete-btn\">\n                                    <i className=\"fa-solid fa-trash-can\"></i>\n                                </div>\n                            </button>\n                        )\n                    })}\n            </div>\n            <div className=\"full-line\"></div>\n            <button onClick={logout} >\n                <h6>Logout</h6>\n                <i className=\"fa-solid fa-arrow-right-from-bracket\"></i>\n            </button>\n        </section>\n    )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/app/notes/page.js"],"sourcesContent":["'use client'\nimport Editor from \"@/components/Editor\"\nimport MDX from \"@/components/MDX\"\nimport SideNav from \"@/components/SideNav\"\nimport { useAuth } from \"@/context/AuthContext\"\nimport { db } from \"@/firebase\"\nimport { doc, getDoc, serverTimestamp, setDoc } from \"firebase/firestore\"\nimport { useSearchParams } from \"next/navigation\"\nimport { useEffect, useState } from \"react\"\n\nexport default function NotesPage() {\n    const [isViewer, setIsViewer] = useState(true)\n    // const [text, setText] = useState('')\n    const [showNav, setShowNav] = useState(false)\n    const [note, setNote] = useState({\n        content: ''\n    })\n    const [isLoading, setIsLoading] = useState(false)\n    const [noteIds, setNoteIds] = useState([])\n    const [savingNote, setSavingNote] = useState(false)\n\n    const { currentUser, isLoadingUser } = useAuth()\n\n    const searchParams = useSearchParams()\n\n\n    function handleToggleViewer() {\n        // isViewer = !isViewer\n        setIsViewer(!isViewer)\n    }\n\n    function handleToggleMenu() {\n        setShowNav(!showNav)\n    }\n\n    function handleCreateNote() {\n        // create a new note\n        setNote({\n            content: ''\n        })\n        setIsViewer(false)\n        window.history.replaceState(null, '', '/notes')\n    }\n\n    function handleEditNote(e) {\n        // edit an existing note\n        setNote({ ...note, content: e.target.value })\n    }\n\n    async function handleSaveNote() {\n        if (!note?.content) { return }\n        setSavingNote(true)\n        try {\n            // see if note already exists in database\n            if (note.id) {\n                // then we have an existing note cause we have it's id, so write to existing note\n                const noteRef = doc(db, 'users', currentUser.uid, 'notes', note.id)\n                await setDoc(noteRef, {\n                    ...note\n                }, { merge: true })\n            } else {\n                // that means that it's a brand new note and will only contain the content field, so we can basically save a new note to firebase\n                const newId = note.content.replaceAll('#', '').slice(0, 15) + '__' + Date.now()\n                const notesRef = doc(db, 'users', currentUser.uid, 'notes', newId)\n                const newDocInfo = await setDoc(notesRef, {\n                    content: note.content,\n                    createdAt: serverTimestamp()\n                })\n                setNoteIds(curr => [...curr, newId])\n                setNote({ ...note, id: newId })\n                window.history.pushState(null, '', `?id=${newId}`)\n            }\n        } catch (err) {\n            console.log(err.message)\n        } finally {\n            setSavingNote(false)\n        }\n    }\n\n    useEffect(() => {\n        // locally cache notes in a global context (like the one we already have, you perhaps just need an extra state)\n        const value = searchParams.get('id')\n\n        if (!value || !currentUser) { return }\n\n        async function fetchNote() {\n            if (isLoading) { return }\n            try {\n                setIsLoading(true)\n                console.log('FETCHING DATA')\n                const noteRef = doc(db, 'users', currentUser.uid, 'notes', value)\n                const snapshot = await getDoc(noteRef)\n                const docData = snapshot.exists() ? { id: snapshot.id, ...snapshot.data() } : null\n                if (docData) {\n                    setNote({ ...docData })\n                }\n            } catch (err) {\n                console.log(err.message)\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        fetchNote()\n    }, [currentUser, searchParams])\n\n\n    if (isLoadingUser) {\n        return (\n            <h6 className=\"text-gradient\">Loading...</h6>\n        )\n    }\n\n    if (!currentUser) {\n        // if no user found, then boot them to the home page cause this is the notes page (for auth users only)\n        window.location.href = '/'\n    }\n\n    return (\n        <main id=\"notes\">\n            <SideNav setIsViewer={setIsViewer} handleCreateNote={handleCreateNote} noteIds={noteIds} setNoteIds={setNoteIds} showNav={showNav} setShowNav={setShowNav} />\n            {!isViewer && (\n                <Editor savingNote={savingNote} handleSaveNote={handleSaveNote} handleToggleMenu={handleToggleMenu} setText={handleEditNote} text={note.content} hello=\"world\" isViewer={isViewer} handleToggleViewer={handleToggleViewer} />\n            )}\n            {isViewer && (\n                <MDX savingNote={savingNote} handleSaveNote={handleSaveNote} handleToggleMenu={handleToggleMenu} text={note.content} isViewer={isViewer} handleToggleViewer={handleToggleViewer} />\n            )}\n        </main>\n    )\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AARA;;;;;;;;;;AAUe,SAAS;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,uCAAuC;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC7B,SAAS;IACb;IACA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IAE7C,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAGnC,SAAS;QACL,uBAAuB;QACvB,YAAY,CAAC;IACjB;IAEA,SAAS;QACL,WAAW,CAAC;IAChB;IAEA,SAAS;QACL,oBAAoB;QACpB,QAAQ;YACJ,SAAS;QACb;QACA,YAAY;QACZ,OAAO,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI;IAC1C;IAEA,SAAS,eAAe,CAAC;QACrB,wBAAwB;QACxB,QAAQ;YAAE,GAAG,IAAI;YAAE,SAAS,EAAE,MAAM,CAAC,KAAK;QAAC;IAC/C;IAEA,eAAe;QACX,IAAI,CAAC,MAAM,SAAS;YAAE;QAAO;QAC7B,cAAc;QACd,IAAI;YACA,yCAAyC;YACzC,IAAI,KAAK,EAAE,EAAE;gBACT,iFAAiF;gBACjF,MAAM,UAAU,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,wGAAA,CAAA,KAAE,EAAE,SAAS,YAAY,GAAG,EAAE,SAAS,KAAK,EAAE;gBAClE,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,SAAS;oBAClB,GAAG,IAAI;gBACX,GAAG;oBAAE,OAAO;gBAAK;YACrB,OAAO;gBACH,iIAAiI;gBACjI,MAAM,QAAQ,KAAK,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,MAAM,OAAO,KAAK,GAAG;gBAC7E,MAAM,WAAW,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,wGAAA,CAAA,KAAE,EAAE,SAAS,YAAY,GAAG,EAAE,SAAS;gBAC5D,MAAM,aAAa,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,UAAU;oBACtC,SAAS,KAAK,OAAO;oBACrB,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;gBAC7B;gBACA,WAAW,CAAA,OAAQ;2BAAI;wBAAM;qBAAM;gBACnC,QAAQ;oBAAE,GAAG,IAAI;oBAAE,IAAI;gBAAM;gBAC7B,OAAO,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,OAAO;YACrD;QACJ,EAAE,OAAO,KAAK;YACV,QAAQ,GAAG,CAAC,IAAI,OAAO;QAC3B,SAAU;YACN,cAAc;QAClB;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,+GAA+G;QAC/G,MAAM,QAAQ,aAAa,GAAG,CAAC;QAE/B,IAAI,CAAC,SAAS,CAAC,aAAa;YAAE;QAAO;QAErC,eAAe;YACX,IAAI,WAAW;gBAAE;YAAO;YACxB,IAAI;gBACA,aAAa;gBACb,QAAQ,GAAG,CAAC;gBACZ,MAAM,UAAU,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,wGAAA,CAAA,KAAE,EAAE,SAAS,YAAY,GAAG,EAAE,SAAS;gBAC3D,MAAM,WAAW,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;gBAC9B,MAAM,UAAU,SAAS,MAAM,KAAK;oBAAE,IAAI,SAAS,EAAE;oBAAE,GAAG,SAAS,IAAI,EAAE;gBAAC,IAAI;gBAC9E,IAAI,SAAS;oBACT,QAAQ;wBAAE,GAAG,OAAO;oBAAC;gBACzB;YACJ,EAAE,OAAO,KAAK;gBACV,QAAQ,GAAG,CAAC,IAAI,OAAO;YAC3B,SAAU;gBACN,aAAa;YACjB;QACJ;QACA;IACJ,GAAG;QAAC;QAAa;KAAa;IAG9B,IAAI,eAAe;QACf,qBACI,8OAAC;YAAG,WAAU;sBAAgB;;;;;;IAEtC;IAEA,IAAI,CAAC,aAAa;QACd,uGAAuG;QACvG,OAAO,QAAQ,CAAC,IAAI,GAAG;IAC3B;IAEA,qBACI,8OAAC;QAAK,IAAG;;0BACL,8OAAC,sHAAA,CAAA,UAAO;gBAAC,aAAa;gBAAa,kBAAkB;gBAAkB,SAAS;gBAAS,YAAY;gBAAY,SAAS;gBAAS,YAAY;;;;;;YAC9I,CAAC,0BACE,8OAAC,qHAAA,CAAA,UAAM;gBAAC,YAAY;gBAAY,gBAAgB;gBAAgB,kBAAkB;gBAAkB,SAAS;gBAAgB,MAAM,KAAK,OAAO;gBAAE,OAAM;gBAAQ,UAAU;gBAAU,oBAAoB;;;;;;YAE1M,0BACG,8OAAC,kHAAA,CAAA,UAAG;gBAAC,YAAY;gBAAY,gBAAgB;gBAAgB,kBAAkB;gBAAkB,MAAM,KAAK,OAAO;gBAAE,UAAU;gBAAU,oBAAoB;;;;;;;;;;;;AAI7K","debugId":null}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"file":"index.module.js","sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/markdown-to-jsx/index.tsx"],"sourcesContent":["/* @jsx h */\n/**\n * markdown-to-jsx is a fork of\n * [simple-markdown v0.2.2](https://github.com/Khan/simple-markdown)\n * from Khan Academy. Thank you Khan devs for making such an awesome\n * and extensible parsing infra... without it, half of the\n * optimizations here wouldn't be feasible. 🙏🏼\n */\nimport * as React from 'react'\n\n/**\n * Analogous to `node.type`. Please note that the values here may change at any time,\n * so do not hard code against the value directly.\n */\nexport const RuleType = {\n  blockQuote: '0',\n  breakLine: '1',\n  breakThematic: '2',\n  codeBlock: '3',\n  codeFenced: '4',\n  codeInline: '5',\n  footnote: '6',\n  footnoteReference: '7',\n  gfmTask: '8',\n  heading: '9',\n  headingSetext: '10',\n  /** only available if not `disableHTMLParsing` */\n  htmlBlock: '11',\n  htmlComment: '12',\n  /** only available if not `disableHTMLParsing` */\n  htmlSelfClosing: '13',\n  image: '14',\n  link: '15',\n  /** emits a `link` 'node', does not render directly */\n  linkAngleBraceStyleDetector: '16',\n  /** emits a `link` 'node', does not render directly */\n  linkBareUrlDetector: '17',\n  /** emits a `link` 'node', does not render directly */\n  linkMailtoDetector: '18',\n  newlineCoalescer: '19',\n  orderedList: '20',\n  paragraph: '21',\n  ref: '22',\n  refImage: '23',\n  refLink: '24',\n  table: '25',\n  tableSeparator: '26',\n  text: '27',\n  textBolded: '28',\n  textEmphasized: '29',\n  textEscaped: '30',\n  textMarked: '31',\n  textStrikethroughed: '32',\n  unorderedList: '33',\n} as const\n\nif (process.env.NODE_ENV === 'test') {\n  Object.keys(RuleType).forEach(key => (RuleType[key] = key))\n}\n\nexport type RuleType = (typeof RuleType)[keyof typeof RuleType]\n\nconst Priority = {\n  /**\n   * anything that must scan the tree before everything else\n   */\n  MAX: 0,\n  /**\n   * scans for block-level constructs\n   */\n  HIGH: 1,\n  /**\n   * inline w/ more priority than other inline\n   */\n  MED: 2,\n  /**\n   * inline elements\n   */\n  LOW: 3,\n  /**\n   * bare text and stuff that is considered leftovers\n   */\n  MIN: 4,\n}\n\n/** TODO: Drop for React 16? */\nconst ATTRIBUTE_TO_JSX_PROP_MAP = [\n  'allowFullScreen',\n  'allowTransparency',\n  'autoComplete',\n  'autoFocus',\n  'autoPlay',\n  'cellPadding',\n  'cellSpacing',\n  'charSet',\n  'classId',\n  'colSpan',\n  'contentEditable',\n  'contextMenu',\n  'crossOrigin',\n  'encType',\n  'formAction',\n  'formEncType',\n  'formMethod',\n  'formNoValidate',\n  'formTarget',\n  'frameBorder',\n  'hrefLang',\n  'inputMode',\n  'keyParams',\n  'keyType',\n  'marginHeight',\n  'marginWidth',\n  'maxLength',\n  'mediaGroup',\n  'minLength',\n  'noValidate',\n  'radioGroup',\n  'readOnly',\n  'rowSpan',\n  'spellCheck',\n  'srcDoc',\n  'srcLang',\n  'srcSet',\n  'tabIndex',\n  'useMap',\n].reduce(\n  (obj, x) => {\n    obj[x.toLowerCase()] = x\n    return obj\n  },\n  { class: 'className', for: 'htmlFor' }\n)\n\nconst namedCodesToUnicode = {\n  amp: '\\u0026',\n  apos: '\\u0027',\n  gt: '\\u003e',\n  lt: '\\u003c',\n  nbsp: '\\u00a0',\n  quot: '\\u201c',\n} as const\n\nconst DO_NOT_PROCESS_HTML_ELEMENTS = ['style', 'script', 'pre']\nconst ATTRIBUTES_TO_SANITIZE = [\n  'src',\n  'href',\n  'data',\n  'formAction',\n  'srcDoc',\n  'action',\n]\n\n/**\n * the attribute extractor regex looks for a valid attribute name,\n * followed by an equal sign (whitespace around the equal sign is allowed), followed\n * by one of the following:\n *\n * 1. a single quote-bounded string, e.g. 'foo'\n * 2. a double quote-bounded string, e.g. \"bar\"\n * 3. an interpolation, e.g. {something}\n *\n * JSX can be be interpolated into itself and is passed through the compiler using\n * the same options and setup as the current run.\n *\n * <Something children={<SomeOtherThing />} />\n *                      ==================\n *                              ↳ children: [<SomeOtherThing />]\n *\n * Otherwise, interpolations are handled as strings or simple booleans\n * unless HTML syntax is detected.\n *\n * <Something color={green} disabled={true} />\n *                   =====            ====\n *                     ↓                ↳ disabled: true\n *                     ↳ color: \"green\"\n *\n * Numbers are not parsed at this time due to complexities around int, float,\n * and the upcoming bigint functionality that would make handling it unwieldy.\n * Parse the string in your component as desired.\n *\n * <Something someBigNumber={123456789123456789} />\n *                           ==================\n *                                   ↳ someBigNumber: \"123456789123456789\"\n */\nconst ATTR_EXTRACTOR_R =\n  /([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi\n\n/** TODO: Write explainers for each of these */\n\nconst AUTOLINK_MAILTO_CHECK_R = /mailto:/i\nconst BLOCK_END_R = /\\n{2,}$/\nconst BLOCKQUOTE_R = /^(\\s*>[\\s\\S]*?)(?=\\n\\n|$)/\nconst BLOCKQUOTE_TRIM_LEFT_MULTILINE_R = /^ *> ?/gm\nconst BLOCKQUOTE_ALERT_R = /^(?:\\[!([^\\]]*)\\]\\n)?([\\s\\S]*)/\nconst BREAK_LINE_R = /^ {2,}\\n/\nconst BREAK_THEMATIC_R = /^(?:( *[-*_])){3,} *(?:\\n *)+\\n/\nconst CODE_BLOCK_FENCED_R =\n  /^(?: {1,3})?(`{3,}|~{3,}) *(\\S+)? *([^\\n]*?)?\\n([\\s\\S]*?)(?:\\1\\n?|$)/\nconst CODE_BLOCK_R = /^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/\nconst CODE_INLINE_R = /^(`+)((?:\\\\`|(?!\\1)`|[^`])+)\\1/\nconst CONSECUTIVE_NEWLINE_R = /^(?:\\n *)*\\n/\nconst CR_NEWLINE_R = /\\r\\n?/g\n\n/**\n * Matches footnotes on the format:\n *\n * [^key]: value\n *\n * Matches multiline footnotes\n *\n * [^key]: row\n * row\n * row\n *\n * And empty lines in indented multiline footnotes\n *\n * [^key]: indented with\n *     row\n *\n *     row\n *\n * Explanation:\n *\n * 1. Look for the starting tag, eg: [^key]\n *    ^\\[\\^([^\\]]+)]\n *\n * 2. The first line starts with a colon, and continues for the rest of the line\n *   :(.*)\n *\n * 3. Parse as many additional lines as possible. Matches new non-empty lines that doesn't begin with a new footnote definition.\n *    (\\n(?!\\[\\^).+)\n *\n * 4. ...or allows for repeated newlines if the next line begins with at least four whitespaces.\n *    (\\n+ {4,}.*)\n */\nconst FOOTNOTE_R = /^\\[\\^([^\\]]+)](:(.*)((\\n+ {4,}.*)|(\\n(?!\\[\\^).+))*)/\n\nconst FOOTNOTE_REFERENCE_R = /^\\[\\^([^\\]]+)]/\nconst FORMFEED_R = /\\f/g\nconst FRONT_MATTER_R = /^---[ \\t]*\\n(.|\\n)*\\n---[ \\t]*\\n/\nconst GFM_TASK_R = /^\\s*?\\[(x|\\s)\\]/\nconst HEADING_R = /^ *(#{1,6}) *([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/\nconst HEADING_ATX_COMPLIANT_R =\n  /^ *(#{1,6}) +([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/\nconst HEADING_SETEXT_R = /^([^\\n]+)\\n *(=|-){3,} *\\n/\n\n/**\n * Explanation:\n *\n * 1. Look for a starting tag, preceded by any amount of spaces\n *    ^ *<\n *\n * 2. Capture the tag name (capture 1)\n *    ([^ >/]+)\n *\n * 3. Ignore a space after the starting tag and capture the attribute portion of the tag (capture 2)\n *     ?([^>]*)>\n *\n * 4. Ensure a matching closing tag is present in the rest of the input string\n *    (?=[\\s\\S]*<\\/\\1>)\n *\n * 5. Capture everything until the matching closing tag -- this might include additional pairs\n *    of the same tag type found in step 2 (capture 3)\n *    ((?:[\\s\\S]*?(?:<\\1[^>]*>[\\s\\S]*?<\\/\\1>)*[\\s\\S]*?)*?)<\\/\\1>\n *\n * 6. Capture excess newlines afterward\n *    \\n*\n */\nconst HTML_BLOCK_ELEMENT_R =\n  /^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?((?:[^>]*[^/])?)>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1\\b)[\\s\\S])*?)<\\/\\1>(?!<\\/\\1>)\\n*/i\n\nconst HTML_CHAR_CODE_R = /&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/gi\n\nconst HTML_COMMENT_R = /^<!--[\\s\\S]*?(?:-->)/\n\n/**\n * borrowed from React 15(https://github.com/facebook/react/blob/894d20744cba99383ffd847dbd5b6e0800355a5c/src/renderers/dom/shared/HTMLDOMPropertyConfig.js)\n */\nconst HTML_CUSTOM_ATTR_R = /^(data|aria|x)-[a-z_][a-z\\d_.-]*$/\n\nconst HTML_SELF_CLOSING_ELEMENT_R =\n  /^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i\nconst INTERPOLATION_R = /^\\{.*\\}$/\nconst LINK_AUTOLINK_BARE_URL_R = /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/\nconst LINK_AUTOLINK_MAILTO_R = /^<([^ >]+@[^ >]+)>/\nconst LINK_AUTOLINK_R = /^<([^ >]+:\\/[^ >]+)>/\nconst CAPTURE_LETTER_AFTER_HYPHEN = /-([a-z])?/gi\nconst NP_TABLE_R = /^(\\|.*)\\n(?: *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*))?\\n?/\nconst PARAGRAPH_R = /^[^\\n]+(?:  \\n|\\n{2,})/\nconst REFERENCE_IMAGE_OR_LINK = /^\\[([^\\]]*)\\]:\\s+<?([^\\s>]+)>?\\s*(\"([^\"]*)\")?/\nconst REFERENCE_IMAGE_R = /^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/\nconst REFERENCE_LINK_R = /^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/\nconst SHOULD_RENDER_AS_BLOCK_R = /(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/\nconst TAB_R = /\\t/g\nconst TABLE_TRIM_PIPES = /(^ *\\||\\| *$)/g\nconst TABLE_CENTER_ALIGN = /^ *:-+: *$/\nconst TABLE_LEFT_ALIGN = /^ *:-+ *$/\nconst TABLE_RIGHT_ALIGN = /^ *-+: *$/\n\n/**\n * For inline formatting, this partial attempts to ignore characters that\n * may appear in nested formatting that could prematurely trigger detection\n * and therefore miss content that should have been included.\n */\nconst INLINE_SKIP_R =\n  '((?:\\\\[.*?\\\\][([].*?[)\\\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|\\\\\\\\\\\\1|[\\\\s\\\\S])+?)'\n\n/**\n * Detect a sequence like **foo** or __foo__. Note that bold has a higher priority\n * than emphasized to support nesting of both since they share a delimiter.\n */\nconst TEXT_BOLD_R = new RegExp(`^([*_])\\\\1${INLINE_SKIP_R}\\\\1\\\\1(?!\\\\1)`)\n\n/**\n * Detect a sequence like *foo* or _foo_.\n */\nconst TEXT_EMPHASIZED_R = new RegExp(`^([*_])${INLINE_SKIP_R}\\\\1(?!\\\\1)`)\n\n/**\n * Detect a sequence like ==foo==.\n */\nconst TEXT_MARKED_R = new RegExp(`^(==)${INLINE_SKIP_R}\\\\1`)\n\n/**\n * Detect a sequence like ~~foo~~.\n */\nconst TEXT_STRIKETHROUGHED_R = new RegExp(`^(~~)${INLINE_SKIP_R}\\\\1`)\n\nconst TEXT_ESCAPED_R = /^\\\\([^0-9A-Za-z\\s])/\nconst UNESCAPE_R = /\\\\([^0-9A-Za-z\\s])/g\n\n/**\n * Always take the first character, then eagerly take text until a double space\n * (potential line break) or some markdown-like punctuation is reached.\n */\nconst TEXT_PLAIN_R = /^[\\s\\S](?:(?!  |[0-9]\\.|http)[^=*_~\\-\\n<`\\\\\\[!])*/\n\nconst TRIM_STARTING_NEWLINES = /^\\n+/\n\nconst HTML_LEFT_TRIM_AMOUNT_R = /^([ \\t]*)/\n\ntype LIST_TYPE = 1 | 2\nconst ORDERED: LIST_TYPE = 1\nconst UNORDERED: LIST_TYPE = 2\n\nconst LIST_LOOKBEHIND_R = /(?:^|\\n)( *)$/\n\n// recognize a `*` `-`, `+`, `1.`, `2.`... list bullet\nconst ORDERED_LIST_BULLET = '(?:\\\\d+\\\\.)'\nconst UNORDERED_LIST_BULLET = '(?:[*+-])'\n\nfunction generateListItemPrefix(type: LIST_TYPE) {\n  return (\n    '( *)(' +\n    (type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET) +\n    ') +'\n  )\n}\n\n// recognize the start of a list item:\n// leading space plus a bullet plus a space (`   * `)\nconst ORDERED_LIST_ITEM_PREFIX = generateListItemPrefix(ORDERED)\nconst UNORDERED_LIST_ITEM_PREFIX = generateListItemPrefix(UNORDERED)\n\nfunction generateListItemPrefixRegex(type: LIST_TYPE) {\n  return new RegExp(\n    '^' +\n      (type === ORDERED ? ORDERED_LIST_ITEM_PREFIX : UNORDERED_LIST_ITEM_PREFIX)\n  )\n}\n\nconst ORDERED_LIST_ITEM_PREFIX_R = generateListItemPrefixRegex(ORDERED)\nconst UNORDERED_LIST_ITEM_PREFIX_R = generateListItemPrefixRegex(UNORDERED)\n\nfunction generateListItemRegex(type: LIST_TYPE) {\n  // recognize an individual list item:\n  //  * hi\n  //    this is part of the same item\n  //\n  //    as is this, which is a new paragraph in the same item\n  //\n  //  * but this is not part of the same item\n  return new RegExp(\n    '^' +\n      (type === ORDERED\n        ? ORDERED_LIST_ITEM_PREFIX\n        : UNORDERED_LIST_ITEM_PREFIX) +\n      '[^\\\\n]*(?:\\\\n' +\n      '(?!\\\\1' +\n      (type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET) +\n      ' )[^\\\\n]*)*(\\\\n|$)',\n    'gm'\n  )\n}\n\nconst ORDERED_LIST_ITEM_R = generateListItemRegex(ORDERED)\nconst UNORDERED_LIST_ITEM_R = generateListItemRegex(UNORDERED)\n\n// check whether a list item has paragraphs: if it does,\n// we leave the newlines at the end\nfunction generateListRegex(type: LIST_TYPE) {\n  const bullet = type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET\n\n  return new RegExp(\n    '^( *)(' +\n      bullet +\n      ') ' +\n      '[\\\\s\\\\S]+?(?:\\\\n{2,}(?! )' +\n      '(?!\\\\1' +\n      bullet +\n      ' (?!' +\n      bullet +\n      ' ))\\\\n*' +\n      // the \\\\s*$ here is so that we can parse the inside of nested\n      // lists, where our content might end before we receive two `\\n`s\n      '|\\\\s*\\\\n*$)'\n  )\n}\n\nconst ORDERED_LIST_R = generateListRegex(ORDERED)\nconst UNORDERED_LIST_R = generateListRegex(UNORDERED)\n\nfunction generateListRule(\n  h: any,\n  type: LIST_TYPE\n): MarkdownToJSX.Rule<\n  MarkdownToJSX.OrderedListNode | MarkdownToJSX.UnorderedListNode\n> {\n  const ordered = type === ORDERED\n  const LIST_R = ordered ? ORDERED_LIST_R : UNORDERED_LIST_R\n  const LIST_ITEM_R = ordered ? ORDERED_LIST_ITEM_R : UNORDERED_LIST_ITEM_R\n  const LIST_ITEM_PREFIX_R = ordered\n    ? ORDERED_LIST_ITEM_PREFIX_R\n    : UNORDERED_LIST_ITEM_PREFIX_R\n\n  return {\n    _qualify: source => LIST_ITEM_PREFIX_R.test(source),\n    _match: allowInline(function (source, state) {\n      // We only want to break into a list if we are at the start of a\n      // line. This is to avoid parsing \"hi * there\" with \"* there\"\n      // becoming a part of a list.\n      // You might wonder, \"but that's inline, so of course it wouldn't\n      // start a list?\". You would be correct! Except that some of our\n      // lists can be inline, because they might be inside another list,\n      // in which case we can parse with inline scope, but need to allow\n      // nested lists inside this inline scope.\n      const isStartOfLine = LIST_LOOKBEHIND_R.exec(state.prevCapture)\n      const isListAllowed = state.list || (!state.inline && !state.simple)\n\n      if (isStartOfLine && isListAllowed) {\n        source = isStartOfLine[1] + source\n\n        return LIST_R.exec(source)\n      } else {\n        return null\n      }\n    }),\n    _order: Priority.HIGH,\n    _parse(capture, parse, state) {\n      const bullet = capture[2]\n      const start = ordered ? +bullet : undefined\n      const items = capture[0]\n        // recognize the end of a paragraph block inside a list item:\n        // two or more newlines at end end of the item\n        .replace(BLOCK_END_R, '\\n')\n        .match(LIST_ITEM_R)\n\n      let lastItemWasAParagraph = false\n\n      const itemContent = items.map(function (item, i) {\n        // We need to see how far indented the item is:\n        const space = LIST_ITEM_PREFIX_R.exec(item)[0].length\n\n        // And then we construct a regex to \"unindent\" the subsequent\n        // lines of the items by that amount:\n        const spaceRegex = new RegExp('^ {1,' + space + '}', 'gm')\n\n        // Before processing the item, we need a couple things\n        const content = item\n          // remove indents on trailing lines:\n          .replace(spaceRegex, '')\n          // remove the bullet:\n          .replace(LIST_ITEM_PREFIX_R, '')\n\n        // Handling \"loose\" lists, like:\n        //\n        //  * this is wrapped in a paragraph\n        //\n        //  * as is this\n        //\n        //  * as is this\n        const isLastItem = i === items.length - 1\n        const containsBlocks = content.indexOf('\\n\\n') !== -1\n\n        // Any element in a list is a block if it contains multiple\n        // newlines. The last element in the list can also be a block\n        // if the previous item in the list was a block (this is\n        // because non-last items in the list can end with \\n\\n, but\n        // the last item can't, so we just \"inherit\" this property\n        // from our previous element).\n        const thisItemIsAParagraph =\n          containsBlocks || (isLastItem && lastItemWasAParagraph)\n        lastItemWasAParagraph = thisItemIsAParagraph\n\n        // backup our state for delta afterwards. We're going to\n        // want to set state.list to true, and state.inline depending\n        // on our list's looseness.\n        const oldStateInline = state.inline\n        const oldStateList = state.list\n        state.list = true\n\n        // Parse inline if we're in a tight list, or block if we're in\n        // a loose list.\n        let adjustedContent\n        if (thisItemIsAParagraph) {\n          state.inline = false\n          adjustedContent = trimEnd(content) + '\\n\\n'\n        } else {\n          state.inline = true\n          adjustedContent = trimEnd(content)\n        }\n\n        const result = parse(adjustedContent, state)\n\n        // Restore our state before returning\n        state.inline = oldStateInline\n        state.list = oldStateList\n\n        return result\n      })\n\n      return {\n        items: itemContent,\n        ordered: ordered,\n        start: start,\n      }\n    },\n    _render(node, output, state) {\n      const Tag = node.ordered ? 'ol' : 'ul'\n\n      return (\n        <Tag\n          key={state.key}\n          start={node.type === RuleType.orderedList ? node.start : undefined}\n        >\n          {node.items.map(function generateListItem(item, i) {\n            return <li key={i}>{output(item, state)}</li>\n          })}\n        </Tag>\n      )\n    },\n  }\n}\n\nconst LINK_INSIDE = '(?:\\\\[[^\\\\]]*\\\\]|[^\\\\[\\\\]]|\\\\](?=[^\\\\[]*\\\\]))*'\nconst LINK_HREF_AND_TITLE =\n  '\\\\s*<?((?:\\\\([^)]*\\\\)|[^\\\\s\\\\\\\\]|\\\\\\\\.)*?)>?(?:\\\\s+[\\'\"]([\\\\s\\\\S]*?)[\\'\"])?\\\\s*'\nconst LINK_R = new RegExp(\n  '^\\\\[(' + LINK_INSIDE + ')\\\\]\\\\(' + LINK_HREF_AND_TITLE + '\\\\)'\n)\nconst IMAGE_R = /^!\\[(.*?)\\]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/\n\nfunction trimEnd(str: string) {\n  let end = str.length\n  while (end > 0 && str[end - 1] <= ' ') end--\n  return str.slice(0, end)\n}\n\nfunction startsWith(str: string, prefix: string) {\n  return str.startsWith(prefix)\n}\n\nfunction qualifies(\n  source: string,\n  state: MarkdownToJSX.State,\n  qualify: MarkdownToJSX.Rule<any>['_qualify']\n) {\n  if (Array.isArray(qualify)) {\n    for (let i = 0; i < qualify.length; i++) {\n      if (startsWith(source, qualify[i])) return true\n    }\n\n    return false\n  }\n\n  return qualify(source, state)\n}\n\n/** Remove symmetrical leading and trailing quotes */\nfunction unquote(str: string) {\n  const first = str[0]\n  if (\n    (first === '\"' || first === \"'\") &&\n    str.length >= 2 &&\n    str[str.length - 1] === first\n  ) {\n    return str.slice(1, -1)\n  }\n  return str\n}\n\n// based on https://stackoverflow.com/a/18123682/1141611\n// not complete, but probably good enough\nexport function slugify(str: string) {\n  return str\n    .replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, 'a')\n    .replace(/[çÇ]/g, 'c')\n    .replace(/[ðÐ]/g, 'd')\n    .replace(/[ÈÉÊËéèêë]/g, 'e')\n    .replace(/[ÏïÎîÍíÌì]/g, 'i')\n    .replace(/[Ññ]/g, 'n')\n    .replace(/[øØœŒÕõÔôÓóÒò]/g, 'o')\n    .replace(/[ÜüÛûÚúÙù]/g, 'u')\n    .replace(/[ŸÿÝý]/g, 'y')\n    .replace(/[^a-z0-9- ]/gi, '')\n    .replace(/ /gi, '-')\n    .toLowerCase()\n}\n\nfunction parseTableAlignCapture(alignCapture: string) {\n  if (TABLE_RIGHT_ALIGN.test(alignCapture)) {\n    return 'right'\n  } else if (TABLE_CENTER_ALIGN.test(alignCapture)) {\n    return 'center'\n  } else if (TABLE_LEFT_ALIGN.test(alignCapture)) {\n    return 'left'\n  }\n\n  return null\n}\n\nfunction parseTableRow(\n  source: string,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State,\n  tableOutput: boolean\n): MarkdownToJSX.ParserResult[][] {\n  const prevInTable = state.inTable\n\n  state.inTable = true\n\n  let cells: MarkdownToJSX.ParserResult[][] = [[]]\n  let acc = ''\n\n  function flush() {\n    if (!acc) return\n\n    const cell = cells[cells.length - 1]\n    cell.push.apply(cell, parse(acc, state))\n    acc = ''\n  }\n\n  source\n    .trim()\n    // isolate situations where a pipe should be ignored (inline code, escaped, etc)\n    .split(/(`[^`]*`|\\\\\\||\\|)/)\n    .filter(Boolean)\n    .forEach((fragment, i, arr) => {\n      if (fragment.trim() === '|') {\n        flush()\n\n        if (tableOutput) {\n          if (i !== 0 && i !== arr.length - 1) {\n            // Split the current row\n            cells.push([])\n          }\n\n          return\n        }\n      }\n\n      acc += fragment\n    })\n\n  flush()\n\n  state.inTable = prevInTable\n\n  return cells\n}\n\nfunction parseTableAlign(source: string /*, parse, state*/) {\n  const alignText = source.replace(TABLE_TRIM_PIPES, '').split('|')\n\n  return alignText.map(parseTableAlignCapture)\n}\n\nfunction parseTableCells(\n  source: string,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  const rowsText = source.trim().split('\\n')\n\n  return rowsText.map(function (rowText) {\n    return parseTableRow(rowText, parse, state, true)\n  })\n}\n\nfunction parseTable(\n  capture: RegExpMatchArray,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  /**\n   * The table syntax makes some other parsing angry so as a bit of a hack even if alignment and/or cell rows are missing,\n   * we'll still run a detected first row through the parser and then just emit a paragraph.\n   */\n  state.inline = true\n  const align = capture[2] ? parseTableAlign(capture[2]) : []\n  const cells = capture[3] ? parseTableCells(capture[3], parse, state) : []\n  const header = parseTableRow(capture[1], parse, state, !!cells.length)\n  state.inline = false\n\n  return cells.length\n    ? {\n        align: align,\n        cells: cells,\n        header: header,\n        type: RuleType.table,\n      }\n    : {\n        children: header,\n        type: RuleType.paragraph,\n      }\n}\n\nfunction getTableStyle(node, colIndex) {\n  return node.align[colIndex] == null\n    ? {}\n    : {\n        textAlign: node.align[colIndex],\n      }\n}\n\n/** TODO: remove for react 16 */\nfunction normalizeAttributeKey(key) {\n  const hyphenIndex = key.indexOf('-')\n\n  if (hyphenIndex !== -1 && key.match(HTML_CUSTOM_ATTR_R) === null) {\n    key = key.replace(CAPTURE_LETTER_AFTER_HYPHEN, function (_, letter) {\n      return letter.toUpperCase()\n    })\n  }\n\n  return key\n}\n\ntype StyleTuple = [key: string, value: string]\n\nfunction parseStyleAttribute(styleString: string): StyleTuple[] {\n  const styles: StyleTuple[] = []\n  let buffer = ''\n  let inUrl = false\n  let inQuotes = false\n  let quoteChar: '\"' | \"'\" | '' = ''\n\n  if (!styleString) return styles\n\n  for (let i = 0; i < styleString.length; i++) {\n    const char = styleString[i]\n\n    // Handle quotes\n    if ((char === '\"' || char === \"'\") && !inUrl) {\n      if (!inQuotes) {\n        inQuotes = true\n        quoteChar = char\n      } else if (char === quoteChar) {\n        inQuotes = false\n        quoteChar = ''\n      }\n    }\n\n    // Track url() values\n    if (char === '(' && buffer.endsWith('url')) {\n      inUrl = true\n    } else if (char === ')' && inUrl) {\n      inUrl = false\n    }\n\n    // Only split on semicolons when not in quotes or url()\n    if (char === ';' && !inQuotes && !inUrl) {\n      const declaration = buffer.trim()\n      if (declaration) {\n        const colonIndex = declaration.indexOf(':')\n        if (colonIndex > 0) {\n          const key = declaration.slice(0, colonIndex).trim()\n          const value = declaration.slice(colonIndex + 1).trim()\n          styles.push([key, value])\n        }\n      }\n      buffer = ''\n    } else {\n      buffer += char\n    }\n  }\n\n  // Handle the last declaration\n  const declaration = buffer.trim()\n  if (declaration) {\n    const colonIndex = declaration.indexOf(':')\n    if (colonIndex > 0) {\n      const key = declaration.slice(0, colonIndex).trim()\n      const value = declaration.slice(colonIndex + 1).trim()\n      styles.push([key, value])\n    }\n  }\n\n  return styles\n}\n\nfunction attributeValueToJSXPropValue(\n  tag: MarkdownToJSX.HTMLTags,\n  key: keyof React.AllHTMLAttributes<Element>,\n  value: string,\n  sanitizeUrlFn: MarkdownToJSX.Options['sanitizer']\n): any {\n  if (key === 'style') {\n    return parseStyleAttribute(value).reduce(function (styles, [key, value]) {\n      // snake-case to camelCase\n      // also handles PascalCasing vendor prefixes\n      const camelCasedKey = key.replace(/(-[a-z])/g, substr =>\n        substr[1].toUpperCase()\n      )\n\n      // key.length + 1 to skip over the colon\n      styles[camelCasedKey] = sanitizeUrlFn(value, tag, key)\n\n      return styles\n    }, {})\n  } else if (ATTRIBUTES_TO_SANITIZE.indexOf(key) !== -1) {\n    return sanitizeUrlFn(unescape(value), tag, key)\n  } else if (value.match(INTERPOLATION_R)) {\n    // return as a string and let the consumer decide what to do with it\n    value = unescape(value.slice(1, value.length - 1))\n  }\n\n  if (value === 'true') {\n    return true\n  } else if (value === 'false') {\n    return false\n  }\n\n  return value\n}\n\nfunction normalizeWhitespace(source: string): string {\n  return source\n    .replace(CR_NEWLINE_R, '\\n')\n    .replace(FORMFEED_R, '')\n    .replace(TAB_R, '    ')\n}\n\n/**\n * Creates a parser for a given set of rules, with the precedence\n * specified as a list of rules.\n *\n * @rules: an object containing\n * rule type -> {match, order, parse} objects\n * (lower order is higher precedence)\n * (Note: `order` is added to defaultRules after creation so that\n *  the `order` of defaultRules in the source matches the `order`\n *  of defaultRules in terms of `order` fields.)\n *\n * @returns The resulting parse function, with the following parameters:\n *   @source: the input source string to be parsed\n *   @state: an optional object to be threaded through parse\n *     calls. Allows clients to add stateful operations to\n *     parsing, such as keeping track of how many levels deep\n *     some nesting is. For an example use-case, see passage-ref\n *     parsing in src/widgets/passage/passage-markdown.jsx\n */\nfunction parserFor(\n  rules: MarkdownToJSX.Rules\n): (\n  source: string,\n  state: MarkdownToJSX.State\n) => ReturnType<MarkdownToJSX.NestedParser> {\n  var ruleList = Object.keys(rules)\n\n  if (process.env.NODE_ENV !== 'production') {\n    ruleList.forEach(function (type) {\n      const order = rules[type]._order\n      if (typeof order !== 'number' || !isFinite(order)) {\n        console.warn(\n          'markdown-to-jsx: Invalid order for rule `' + type + '`: ' + order\n        )\n      }\n    })\n  }\n\n  // Sorts rules in order of increasing order, then\n  // ascending rule name in case of ties.\n  ruleList.sort(function (a, b) {\n    return rules[a]._order - rules[b]._order || (a < b ? -1 : 1)\n  })\n\n  function nestedParse(\n    source: string,\n    state: MarkdownToJSX.State\n  ): MarkdownToJSX.ParserResult[] {\n    var result = []\n    state.prevCapture = state.prevCapture || ''\n\n    if (source.trim()) {\n      while (source) {\n        var i = 0\n        while (i < ruleList.length) {\n          var ruleType = ruleList[i]\n          var rule = rules[ruleType]\n\n          if (rule._qualify && !qualifies(source, state, rule._qualify)) {\n            i++\n            continue\n          }\n\n          var capture = rule._match(source, state)\n          if (capture && capture[0]) {\n            source = source.substring(capture[0].length)\n\n            var parsed = rule._parse(capture, nestedParse, state)\n\n            state.prevCapture += capture[0]\n\n            if (!parsed.type) parsed.type = ruleType as unknown as RuleType\n            result.push(parsed)\n            break\n          }\n          i++\n        }\n      }\n    }\n\n    // reset on exit\n    state.prevCapture = ''\n\n    return result\n  }\n\n  return function (source, state) {\n    return nestedParse(normalizeWhitespace(source), state)\n  }\n}\n\n/**\n * Marks a matcher function as eligible for being run inside an inline context;\n * allows us to do a little less work in the nested parser.\n */\nfunction allowInline<T extends Function & { inline?: 0 | 1 }>(fn: T) {\n  fn.inline = 1\n\n  return fn\n}\n\n// Creates a match function for an inline scoped or simple element from a regex\nfunction inlineRegex(regex: RegExp) {\n  return allowInline(function match(source, state: MarkdownToJSX.State) {\n    if (state.inline) {\n      return regex.exec(source)\n    } else {\n      return null\n    }\n  })\n}\n\n// basically any inline element except links\nfunction simpleInlineRegex(regex: RegExp) {\n  return allowInline(function match(\n    source: string,\n    state: MarkdownToJSX.State\n  ) {\n    if (state.inline || state.simple) {\n      return regex.exec(source)\n    } else {\n      return null\n    }\n  })\n}\n\n// Creates a match function for a block scoped element from a regex\nfunction blockRegex(regex: RegExp) {\n  return function match(source: string, state: MarkdownToJSX.State) {\n    if (state.inline || state.simple) {\n      return null\n    } else {\n      return regex.exec(source)\n    }\n  }\n}\n\n// Creates a match function from a regex, ignoring block/inline scope\nfunction anyScopeRegex(regex: RegExp) {\n  return allowInline(function match(source: string /*, state*/) {\n    return regex.exec(source)\n  })\n}\n\nconst SANITIZE_R = /(javascript|vbscript|data(?!:image)):/i\n\nexport function sanitizer(input: string): string {\n  try {\n    const decoded = decodeURIComponent(input).replace(/[^A-Za-z0-9/:]/g, '')\n\n    if (SANITIZE_R.test(decoded)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          'Input contains an unsafe JavaScript/VBScript/data expression, it will not be rendered.',\n          decoded\n        )\n      }\n\n      return null\n    }\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\n        'Input could not be decoded due to malformed syntax or characters, it will not be rendered.',\n        input\n      )\n    }\n\n    // decodeURIComponent sometimes throws a URIError\n    // See `decodeURIComponent('a%AFc');`\n    // http://stackoverflow.com/questions/9064536/javascript-decodeuricomponent-malformed-uri-exception\n    return null\n  }\n\n  return input\n}\n\nfunction unescape(rawString: string): string {\n  return rawString ? rawString.replace(UNESCAPE_R, '$1') : rawString\n}\n\n/**\n * Everything inline, including links.\n */\nfunction parseInline(\n  parse: MarkdownToJSX.NestedParser,\n  children: string,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult[] {\n  const isCurrentlyInline = state.inline || false\n  const isCurrentlySimple = state.simple || false\n  state.inline = true\n  state.simple = true\n  const result = parse(children, state)\n  state.inline = isCurrentlyInline\n  state.simple = isCurrentlySimple\n  return result\n}\n\n/**\n * Anything inline that isn't a link.\n */\nfunction parseSimpleInline(\n  parse: MarkdownToJSX.NestedParser,\n  children: string,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult[] {\n  const isCurrentlyInline = state.inline || false\n  const isCurrentlySimple = state.simple || false\n  state.inline = false\n  state.simple = true\n  const result = parse(children, state)\n  state.inline = isCurrentlyInline\n  state.simple = isCurrentlySimple\n  return result\n}\n\nfunction parseBlock(\n  parse,\n  children,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult[] {\n  const isCurrentlyInline = state.inline || false\n  state.inline = false\n  const result = parse(children, state)\n  state.inline = isCurrentlyInline\n  return result\n}\n\nconst parseCaptureInline: MarkdownToJSX.Parser<{\n  children: MarkdownToJSX.ParserResult[]\n}> = (capture, parse, state: MarkdownToJSX.State) => {\n  return {\n    children: parseInline(parse, capture[2], state),\n  }\n}\n\nfunction captureNothing() {\n  return {}\n}\n\nfunction renderNothing() {\n  return null\n}\n\nfunction reactFor(render) {\n  return function patchedRender(\n    ast: MarkdownToJSX.ParserResult | MarkdownToJSX.ParserResult[],\n    state: MarkdownToJSX.State = {}\n  ): React.ReactNode[] {\n    if (Array.isArray(ast)) {\n      const oldKey = state.key\n      const result = []\n\n      // map nestedOutput over the ast, except group any text\n      // nodes together into a single string output.\n      let lastWasString = false\n\n      for (let i = 0; i < ast.length; i++) {\n        state.key = i\n\n        const nodeOut = patchedRender(ast[i], state)\n        const isString = typeof nodeOut === 'string'\n\n        if (isString && lastWasString) {\n          result[result.length - 1] += nodeOut\n        } else if (nodeOut !== null) {\n          result.push(nodeOut)\n        }\n\n        lastWasString = isString\n      }\n\n      state.key = oldKey\n\n      return result\n    }\n\n    return render(ast, patchedRender, state)\n  }\n}\n\nfunction createRenderer(\n  rules: MarkdownToJSX.Rules,\n  userRender?: MarkdownToJSX.Options['renderRule']\n) {\n  return function renderRule(\n    ast: MarkdownToJSX.ParserResult,\n    render: MarkdownToJSX.RuleOutput,\n    state: MarkdownToJSX.State\n  ): React.ReactNode {\n    const renderer = rules[ast.type]._render as MarkdownToJSX.Rule['_render']\n\n    return userRender\n      ? userRender(() => renderer(ast, render, state), ast, render, state)\n      : renderer(ast, render, state)\n  }\n}\n\nfunction cx(...args) {\n  return args.filter(Boolean).join(' ')\n}\n\nfunction get(src: Object, path: string, fb?: any) {\n  let ptr = src\n  const frags = path.split('.')\n\n  while (frags.length) {\n    ptr = ptr[frags[0]]\n\n    if (ptr === undefined) break\n    else frags.shift()\n  }\n\n  return ptr || fb\n}\n\nfunction getTag(tag: string, overrides: MarkdownToJSX.Overrides) {\n  const override = get(overrides, tag)\n\n  if (!override) return tag\n\n  return typeof override === 'function' ||\n    (typeof override === 'object' && 'render' in override)\n    ? override\n    : get(overrides, `${tag}.component`, tag)\n}\n\nexport function compiler(\n  markdown: string = '',\n  options: MarkdownToJSX.Options = {}\n): React.JSX.Element {\n  options.overrides = options.overrides || {}\n  options.namedCodesToUnicode = options.namedCodesToUnicode\n    ? { ...namedCodesToUnicode, ...options.namedCodesToUnicode }\n    : namedCodesToUnicode\n\n  const slug = options.slugify || slugify\n  const sanitize = options.sanitizer || sanitizer\n  const createElement = options.createElement || React.createElement\n\n  const NON_PARAGRAPH_BLOCK_SYNTAXES = [\n    BLOCKQUOTE_R,\n    CODE_BLOCK_FENCED_R,\n    CODE_BLOCK_R,\n    options.enforceAtxHeadings ? HEADING_ATX_COMPLIANT_R : HEADING_R,\n    HEADING_SETEXT_R,\n    NP_TABLE_R,\n    ORDERED_LIST_R,\n    UNORDERED_LIST_R,\n  ]\n\n  const BLOCK_SYNTAXES = [\n    ...NON_PARAGRAPH_BLOCK_SYNTAXES,\n    PARAGRAPH_R,\n    HTML_BLOCK_ELEMENT_R,\n    HTML_COMMENT_R,\n    HTML_SELF_CLOSING_ELEMENT_R,\n  ]\n\n  function containsBlockSyntax(input: string) {\n    return BLOCK_SYNTAXES.some(r => r.test(input))\n  }\n\n  function matchParagraph(source: string, state: MarkdownToJSX.State) {\n    if (\n      state.inline ||\n      state.simple ||\n      (state.inHTML &&\n        source.indexOf('\\n\\n') === -1 &&\n        state.prevCapture.indexOf('\\n\\n') === -1)\n    ) {\n      return null\n    }\n\n    let match = ''\n\n    source.split('\\n').every(line => {\n      line += '\\n'\n\n      // bail out on first sign of non-paragraph block\n      if (NON_PARAGRAPH_BLOCK_SYNTAXES.some(regex => regex.test(line))) {\n        return false\n      }\n\n      match += line\n\n      return !!line.trim()\n    })\n\n    const captured = trimEnd(match)\n    if (captured === '') {\n      return null\n    }\n\n    // parseCaptureInline expects the inner content to be at index 2\n    // because index 1 is the delimiter for text formatting syntaxes\n    return [match, , captured] as RegExpMatchArray\n  }\n\n  // JSX custom pragma\n  // eslint-disable-next-line no-unused-vars\n  function h(\n    // locally we always will render a known string tag\n    tag: MarkdownToJSX.HTMLTags,\n    props: Parameters<MarkdownToJSX.CreateElement>[1] & {\n      className?: string\n      id?: string\n    },\n    ...children\n  ) {\n    const overrideProps = get(options.overrides, `${tag}.props`, {})\n\n    return createElement(\n      getTag(tag, options.overrides),\n      {\n        ...props,\n        ...overrideProps,\n        className: cx(props?.className, overrideProps.className) || undefined,\n      },\n      ...children\n    )\n  }\n\n  function compile(input: string): React.JSX.Element {\n    input = input.replace(FRONT_MATTER_R, '')\n\n    let inline = false\n\n    if (options.forceInline) {\n      inline = true\n    } else if (!options.forceBlock) {\n      /**\n       * should not contain any block-level markdown like newlines, lists, headings,\n       * thematic breaks, blockquotes, tables, etc\n       */\n      inline = SHOULD_RENDER_AS_BLOCK_R.test(input) === false\n    }\n\n    const arr = emitter(\n      parser(\n        inline\n          ? input\n          : `${trimEnd(input).replace(TRIM_STARTING_NEWLINES, '')}\\n\\n`,\n        {\n          inline,\n        }\n      )\n    )\n\n    while (\n      typeof arr[arr.length - 1] === 'string' &&\n      !arr[arr.length - 1].trim()\n    ) {\n      arr.pop()\n    }\n\n    if (options.wrapper === null) {\n      return arr\n    }\n\n    const wrapper = options.wrapper || (inline ? 'span' : 'div')\n    let jsx\n\n    if (arr.length > 1 || options.forceWrapper) {\n      jsx = arr\n    } else if (arr.length === 1) {\n      jsx = arr[0]\n\n      // TODO: remove this for React 16\n      if (typeof jsx === 'string') {\n        return <span key=\"outer\">{jsx}</span>\n      } else {\n        return jsx\n      }\n    } else {\n      // TODO: return null for React 16\n      jsx = null\n    }\n\n    return createElement(wrapper, { key: 'outer' }, jsx) as React.JSX.Element\n  }\n\n  function attrStringToMap(\n    tag: MarkdownToJSX.HTMLTags,\n    str: string\n  ): React.JSX.IntrinsicAttributes {\n    if (!str || !str.trim()) {\n      return null\n    }\n\n    const attributes = str.match(ATTR_EXTRACTOR_R)\n    if (!attributes) {\n      return null\n    }\n\n    return attributes.reduce(function (map, raw) {\n      const delimiterIdx = raw.indexOf('=')\n\n      if (delimiterIdx !== -1) {\n        const key = normalizeAttributeKey(raw.slice(0, delimiterIdx)).trim()\n        const value = unquote(raw.slice(delimiterIdx + 1).trim())\n\n        const mappedKey = ATTRIBUTE_TO_JSX_PROP_MAP[key] || key\n\n        // bail out, not supported\n        if (mappedKey === 'ref') return map\n\n        const normalizedValue = (map[mappedKey] = attributeValueToJSXPropValue(\n          tag,\n          key,\n          value,\n          sanitize\n        ))\n\n        if (\n          typeof normalizedValue === 'string' &&\n          (HTML_BLOCK_ELEMENT_R.test(normalizedValue) ||\n            HTML_SELF_CLOSING_ELEMENT_R.test(normalizedValue))\n        ) {\n          map[mappedKey] = compile(normalizedValue.trim())\n        }\n      } else if (raw !== 'style') {\n        map[ATTRIBUTE_TO_JSX_PROP_MAP[raw] || raw] = true\n      }\n\n      return map\n    }, {})\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof markdown !== 'string') {\n      throw new Error(`markdown-to-jsx: the first argument must be\n                             a string`)\n    }\n\n    if (\n      Object.prototype.toString.call(options.overrides) !== '[object Object]'\n    ) {\n      throw new Error(`markdown-to-jsx: options.overrides (second argument property) must be\n                             undefined or an object literal with shape:\n                             {\n                                htmltagname: {\n                                    component: string|ReactComponent(optional),\n                                    props: object(optional)\n                                }\n                             }`)\n    }\n  }\n\n  const footnotes: { footnote: string; identifier: string }[] = []\n  const refs: { [key: string]: { target: string; title: string } } = {}\n\n  /**\n   * each rule's react() output function goes through our custom\n   * h() JSX pragma; this allows the override functionality to be\n   * automatically applied\n   */\n  // @ts-ignore\n  const rules: MarkdownToJSX.Rules = {\n    [RuleType.blockQuote]: {\n      _qualify: ['>'],\n      _match: blockRegex(BLOCKQUOTE_R),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        const [, alert, content] = capture[0]\n          .replace(BLOCKQUOTE_TRIM_LEFT_MULTILINE_R, '')\n          .match(BLOCKQUOTE_ALERT_R)\n\n        return {\n          alert,\n          children: parse(content, state),\n        }\n      },\n      _render(node, output, state) {\n        const props = {\n          key: state.key,\n        } as Record<string, unknown>\n\n        if (node.alert) {\n          props.className =\n            'markdown-alert-' + slug(node.alert.toLowerCase(), slugify)\n\n          node.children.unshift({\n            attrs: {},\n            children: [{ type: RuleType.text, text: node.alert }],\n            noInnerParse: true,\n            type: RuleType.htmlBlock,\n            tag: 'header',\n          })\n        }\n\n        return h('blockquote', props, output(node.children, state))\n      },\n    },\n\n    [RuleType.breakLine]: {\n      _match: anyScopeRegex(BREAK_LINE_R),\n      _order: Priority.HIGH,\n      _parse: captureNothing,\n      _render(_, __, state) {\n        return <br key={state.key} />\n      },\n    },\n\n    [RuleType.breakThematic]: {\n      _qualify: source => {\n        const char = source[0]\n        return char === '-' || char === '*' || char === '_'\n      },\n      _match: blockRegex(BREAK_THEMATIC_R),\n      _order: Priority.HIGH,\n      _parse: captureNothing,\n      _render(_, __, state) {\n        return <hr key={state.key} />\n      },\n    },\n\n    [RuleType.codeBlock]: {\n      _qualify: ['    '],\n      _match: blockRegex(CODE_BLOCK_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          lang: undefined,\n          text: unescape(trimEnd(capture[0].replace(/^ {4}/gm, ''))),\n        }\n      },\n\n      _render(node, output, state) {\n        return (\n          <pre key={state.key}>\n            <code\n              {...node.attrs}\n              className={node.lang ? `lang-${node.lang}` : ''}\n            >\n              {node.text}\n            </code>\n          </pre>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      attrs?: ReturnType<typeof attrStringToMap>\n      lang?: string\n      text: string\n    }>,\n\n    [RuleType.codeFenced]: {\n      _qualify: ['```', '~~~'],\n      _match: blockRegex(CODE_BLOCK_FENCED_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          // if capture[3] it's additional metadata\n          attrs: attrStringToMap('code', capture[3] || ''),\n          lang: capture[2] || undefined,\n          text: capture[4],\n          type: RuleType.codeBlock,\n        }\n      },\n    },\n\n    [RuleType.codeInline]: {\n      _qualify: ['`'],\n      _match: simpleInlineRegex(CODE_INLINE_R),\n      _order: Priority.LOW,\n      _parse(capture /*, parse, state*/) {\n        return {\n          text: unescape(capture[2]),\n        }\n      },\n      _render(node, output, state) {\n        return <code key={state.key}>{node.text}</code>\n      },\n    },\n\n    /**\n     * footnotes are emitted at the end of compilation in a special <footer> block\n     */\n    [RuleType.footnote]: {\n      _qualify: ['[^'],\n      _match: blockRegex(FOOTNOTE_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        footnotes.push({\n          footnote: capture[2],\n          identifier: capture[1],\n        })\n\n        return {}\n      },\n      _render: renderNothing,\n    },\n\n    [RuleType.footnoteReference]: {\n      _qualify: ['[^'],\n      _match: inlineRegex(FOOTNOTE_REFERENCE_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse*/) {\n        return {\n          target: `#${slug(capture[1], slugify)}`,\n          text: capture[1],\n        }\n      },\n      _render(node, output, state) {\n        return (\n          <a key={state.key} href={sanitize(node.target, 'a', 'href')}>\n            <sup key={state.key}>{node.text}</sup>\n          </a>\n        )\n      },\n    } as MarkdownToJSX.Rule<{ target: string; text: string }>,\n\n    [RuleType.gfmTask]: {\n      _qualify: ['[ ]', '[x]'],\n      _match: inlineRegex(GFM_TASK_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          completed: capture[1].toLowerCase() === 'x',\n        }\n      },\n      _render(node, output, state) {\n        return (\n          <input\n            checked={node.completed}\n            key={state.key}\n            readOnly\n            type=\"checkbox\"\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{ completed: boolean }>,\n\n    [RuleType.heading]: {\n      _qualify: ['#'],\n      _match: blockRegex(\n        options.enforceAtxHeadings ? HEADING_ATX_COMPLIANT_R : HEADING_R\n      ),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        return {\n          children: parseInline(parse, capture[2], state),\n          id: slug(capture[2], slugify),\n          level: capture[1].length as MarkdownToJSX.HeadingNode['level'],\n        }\n      },\n      _render(node, output, state) {\n        return h(\n          `h${node.level}`,\n          { id: node.id, key: state.key },\n          output(node.children, state)\n        )\n      },\n    },\n\n    [RuleType.headingSetext]: {\n      _match: blockRegex(HEADING_SETEXT_R),\n      _order: Priority.MAX,\n      _parse(capture, parse, state) {\n        return {\n          children: parseInline(parse, capture[1], state),\n          level: capture[2] === '=' ? 1 : 2,\n          type: RuleType.heading,\n        }\n      },\n    },\n\n    [RuleType.htmlBlock]: {\n      _qualify: ['<'],\n      /**\n       * find the first matching end tag and process the interior\n       */\n      _match: anyScopeRegex(HTML_BLOCK_ELEMENT_R),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        const [, whitespace] = capture[3].match(HTML_LEFT_TRIM_AMOUNT_R)\n\n        const trimmer = new RegExp(`^${whitespace}`, 'gm')\n        const trimmed = capture[3].replace(trimmer, '')\n\n        const parseFunc = containsBlockSyntax(trimmed)\n          ? parseBlock\n          : parseInline\n\n        const tagName = capture[1].toLowerCase() as MarkdownToJSX.HTMLTags\n        const noInnerParse =\n          DO_NOT_PROCESS_HTML_ELEMENTS.indexOf(tagName) !== -1\n\n        const tag = (\n          noInnerParse ? tagName : capture[1]\n        ).trim() as MarkdownToJSX.HTMLTags\n\n        const ast = {\n          attrs: attrStringToMap(tag, capture[2]),\n          noInnerParse: noInnerParse,\n          tag,\n        } as {\n          attrs: ReturnType<typeof attrStringToMap>\n          children?: ReturnType<MarkdownToJSX.NestedParser> | undefined\n          noInnerParse: Boolean\n          tag: MarkdownToJSX.HTMLTags\n          text?: string | undefined\n        }\n\n        state.inAnchor = state.inAnchor || tagName === 'a'\n\n        if (noInnerParse) {\n          ast.text = capture[3]\n        } else {\n          const prevInHTML = state.inHTML\n          state.inHTML = true\n          ast.children = parseFunc(parse, trimmed, state)\n          state.inHTML = prevInHTML\n        }\n\n        /**\n         * if another html block is detected within, parse as block,\n         * otherwise parse as inline to pick up any further markdown\n         */\n        state.inAnchor = false\n\n        return ast\n      },\n      _render(node, output, state) {\n        return (\n          <node.tag key={state.key} {...node.attrs}>\n            {node.text || (node.children ? output(node.children, state) : '')}\n          </node.tag>\n        )\n      },\n    },\n\n    [RuleType.htmlSelfClosing]: {\n      _qualify: ['<'],\n      /**\n       * find the first matching end tag and process the interior\n       */\n      _match: anyScopeRegex(HTML_SELF_CLOSING_ELEMENT_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        const tag = capture[1].trim() as MarkdownToJSX.HTMLTags\n        return {\n          attrs: attrStringToMap(tag, capture[2] || ''),\n          tag,\n        }\n      },\n      _render(node, output, state) {\n        return <node.tag {...node.attrs} key={state.key} />\n      },\n    },\n\n    [RuleType.htmlComment]: {\n      _qualify: ['<!--'],\n      _match: anyScopeRegex(HTML_COMMENT_R),\n      _order: Priority.HIGH,\n      _parse() {\n        return {}\n      },\n      _render: renderNothing,\n    },\n\n    [RuleType.image]: {\n      _qualify: ['!['],\n      _match: simpleInlineRegex(IMAGE_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          alt: unescape(capture[1]),\n          target: unescape(capture[2]),\n          title: unescape(capture[3]),\n        }\n      },\n      _render(node, output, state) {\n        return (\n          <img\n            key={state.key}\n            alt={node.alt || undefined}\n            title={node.title || undefined}\n            src={sanitize(node.target, 'img', 'src')}\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      alt?: string\n      target: string\n      title?: string\n    }>,\n\n    [RuleType.link]: {\n      _qualify: ['['],\n      _match: inlineRegex(LINK_R),\n      _order: Priority.LOW,\n      _parse(capture, parse, state) {\n        return {\n          children: parseSimpleInline(parse, capture[1], state),\n          target: unescape(capture[2]),\n          title: unescape(capture[3]),\n        }\n      },\n      _render(node, output, state) {\n        return (\n          <a\n            key={state.key}\n            href={sanitize(node.target, 'a', 'href')}\n            title={node.title}\n          >\n            {output(node.children, state)}\n          </a>\n        )\n      },\n    },\n\n    // https://daringfireball.net/projects/markdown/syntax#autolink\n    [RuleType.linkAngleBraceStyleDetector]: {\n      _qualify: ['<'],\n      _match: inlineRegex(LINK_AUTOLINK_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          children: [\n            {\n              text: capture[1],\n              type: RuleType.text,\n            },\n          ],\n          target: capture[1],\n          type: RuleType.link,\n        }\n      },\n    },\n\n    [RuleType.linkBareUrlDetector]: {\n      _qualify: (source, state) => {\n        if (state.inAnchor || options.disableAutoLink) return false\n        return startsWith(source, 'http://') || startsWith(source, 'https://')\n      },\n      _match: inlineRegex(LINK_AUTOLINK_BARE_URL_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          children: [\n            {\n              text: capture[1],\n              type: RuleType.text,\n            },\n          ],\n          target: capture[1],\n          title: undefined,\n          type: RuleType.link,\n        }\n      },\n    },\n\n    [RuleType.linkMailtoDetector]: {\n      _qualify: ['<'],\n      _match: inlineRegex(LINK_AUTOLINK_MAILTO_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        let address = capture[1]\n        let target = capture[1]\n\n        // Check for a `mailto:` already existing in the link:\n        if (!AUTOLINK_MAILTO_CHECK_R.test(target)) {\n          target = 'mailto:' + target\n        }\n\n        return {\n          children: [\n            {\n              text: address.replace('mailto:', ''),\n              type: RuleType.text,\n            },\n          ],\n          target: target,\n          type: RuleType.link,\n        }\n      },\n    },\n\n    [RuleType.orderedList]: generateListRule(\n      h,\n      ORDERED\n    ) as MarkdownToJSX.Rule<MarkdownToJSX.OrderedListNode>,\n\n    [RuleType.unorderedList]: generateListRule(\n      h,\n      UNORDERED\n    ) as MarkdownToJSX.Rule<MarkdownToJSX.UnorderedListNode>,\n\n    [RuleType.newlineCoalescer]: {\n      _match: blockRegex(CONSECUTIVE_NEWLINE_R),\n      _order: Priority.LOW,\n      _parse: captureNothing,\n      _render(/*node, output, state*/) {\n        return '\\n'\n      },\n    },\n\n    [RuleType.paragraph]: {\n      _match: allowInline(matchParagraph),\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _render(node, output, state) {\n        return <p key={state.key}>{output(node.children, state)}</p>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseCaptureInline>>,\n\n    [RuleType.ref]: {\n      _qualify: ['['],\n      _match: inlineRegex(REFERENCE_IMAGE_OR_LINK),\n      _order: Priority.MAX,\n      _parse(capture /*, parse*/) {\n        refs[capture[1]] = {\n          target: capture[2],\n          title: capture[4],\n        }\n\n        return {}\n      },\n      _render: renderNothing,\n    },\n\n    [RuleType.refImage]: {\n      _qualify: ['!['],\n      _match: simpleInlineRegex(REFERENCE_IMAGE_R),\n      _order: Priority.MAX,\n      _parse(capture) {\n        return {\n          alt: capture[1] ? unescape(capture[1]) : undefined,\n          ref: capture[2],\n        }\n      },\n      _render(node, output, state) {\n        return refs[node.ref] ? (\n          <img\n            key={state.key}\n            alt={node.alt}\n            src={sanitize(refs[node.ref].target, 'img', 'src')}\n            title={refs[node.ref].title}\n          />\n        ) : null\n      },\n    } as MarkdownToJSX.Rule<{ alt?: string; ref: string }>,\n\n    [RuleType.refLink]: {\n      _qualify: ['['],\n      _match: inlineRegex(REFERENCE_LINK_R),\n      _order: Priority.MAX,\n      _parse(capture, parse, state) {\n        return {\n          children: parse(capture[1], state),\n          fallbackChildren: capture[0],\n          ref: capture[2],\n        }\n      },\n      _render(node, output, state) {\n        return refs[node.ref] ? (\n          <a\n            key={state.key}\n            href={sanitize(refs[node.ref].target, 'a', 'href')}\n            title={refs[node.ref].title}\n          >\n            {output(node.children, state)}\n          </a>\n        ) : (\n          <span key={state.key}>{node.fallbackChildren}</span>\n        )\n      },\n    },\n\n    [RuleType.table]: {\n      _qualify: ['|'],\n      _match: blockRegex(NP_TABLE_R),\n      _order: Priority.HIGH,\n      _parse: parseTable,\n      _render(node, output, state) {\n        const table = node as MarkdownToJSX.TableNode\n        return (\n          <table key={state.key}>\n            <thead>\n              <tr>\n                {table.header.map(function generateHeaderCell(content, i) {\n                  return (\n                    <th key={i} style={getTableStyle(table, i)}>\n                      {output(content, state)}\n                    </th>\n                  )\n                })}\n              </tr>\n            </thead>\n\n            <tbody>\n              {table.cells.map(function generateTableRow(row, i) {\n                return (\n                  <tr key={i}>\n                    {row.map(function generateTableCell(content, c) {\n                      return (\n                        <td key={c} style={getTableStyle(table, c)}>\n                          {output(content, state)}\n                        </td>\n                      )\n                    })}\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        )\n      },\n    },\n\n    [RuleType.text]: {\n      // Here we look for anything followed by non-symbols,\n      // double newlines, or double-space-newlines\n      // We break on any symbol characters so that this grammar\n      // is easy to extend without needing to modify this regex\n      _match: anyScopeRegex(TEXT_PLAIN_R),\n      _order: Priority.MIN,\n      _parse(capture) {\n        const text = capture[0]\n        return {\n          text:\n            text.indexOf('&') === -1\n              ? text\n              : text.replace(\n                  HTML_CHAR_CODE_R,\n                  (full, inner) => options.namedCodesToUnicode[inner] || full\n                ),\n        }\n      },\n      _render(node) {\n        return node.text\n      },\n    },\n\n    [RuleType.textBolded]: {\n      _qualify: ['**', '__'],\n      _match: simpleInlineRegex(TEXT_BOLD_R),\n      _order: Priority.MED,\n      _parse(capture, parse, state) {\n        return {\n          // capture[1] -> the syntax control character\n          // capture[2] -> inner content\n          children: parse(capture[2], state),\n        }\n      },\n      _render(node, output, state) {\n        return <strong key={state.key}>{output(node.children, state)}</strong>\n      },\n    },\n\n    [RuleType.textEmphasized]: {\n      _qualify: source => {\n        const char = source[0]\n        return (char === '*' || char === '_') && source[1] !== char\n      },\n      _match: simpleInlineRegex(TEXT_EMPHASIZED_R),\n      _order: Priority.LOW,\n      _parse(capture, parse, state) {\n        return {\n          // capture[1] -> opening * or _\n          // capture[2] -> inner content\n          children: parse(capture[2], state),\n        }\n      },\n      _render(node, output, state) {\n        return <em key={state.key}>{output(node.children, state)}</em>\n      },\n    },\n\n    [RuleType.textEscaped]: {\n      _qualify: ['\\\\'],\n      // We don't allow escaping numbers, letters, or spaces here so that\n      // backslashes used in plain text still get rendered. But allowing\n      // escaping anything else provides a very flexible escape mechanism,\n      // regardless of how this grammar is extended.\n      _match: simpleInlineRegex(TEXT_ESCAPED_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          text: capture[1],\n          type: RuleType.text,\n        }\n      },\n    },\n\n    [RuleType.textMarked]: {\n      _qualify: ['=='],\n      _match: simpleInlineRegex(TEXT_MARKED_R),\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _render(node, output, state) {\n        return <mark key={state.key}>{output(node.children, state)}</mark>\n      },\n    },\n\n    [RuleType.textStrikethroughed]: {\n      _qualify: ['~~'],\n      _match: simpleInlineRegex(TEXT_STRIKETHROUGHED_R),\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _render(node, output, state) {\n        return <del key={state.key}>{output(node.children, state)}</del>\n      },\n    },\n  }\n\n  // Object.keys(rules).forEach(key => {\n  //   let { _match: match, parse: parse } = rules[key]\n\n  //   // rules[key].match = (...args) => {\n  //   //   const start = performance.now()\n  //   //   const result = match(...args)\n  //   //   const delta = performance.now() - start\n\n  //   //   if (delta > 5)\n  //   //     console.warn(\n  //   //       `Slow match for ${key}: ${delta.toFixed(3)}ms, input: ${args[0]}`\n  //   //     )\n\n  //   //   return result\n  //   // }\n\n  //   rules[key].parse = (...args) => {\n  //     const start = performance.now()\n  //     const result = parse(...args)\n  //     const delta = performance.now() - start\n\n  //     if (delta > 5) {\n  //       console.warn(\n  //         `Slow parse for ${key}: ${delta.toFixed(3)}ms, input: ${args[0]}`\n  //       )\n  //     }\n\n  //     // console[delta > 5 ? 'warn' : 'log'](\n  //     //   `${key}:parse`,\n  //     //   `${delta.toFixed(3)}ms`,\n  //     //   args[0]\n  //     // )\n\n  //     return result\n  //   }\n  // })\n\n  if (options.disableParsingRawHTML === true) {\n    delete rules[RuleType.htmlBlock]\n    delete rules[RuleType.htmlSelfClosing]\n  }\n\n  const parser = parserFor(rules)\n  const emitter: Function = reactFor(createRenderer(rules, options.renderRule))\n\n  const jsx = compile(markdown)\n\n  if (footnotes.length) {\n    return (\n      <div>\n        {jsx}\n        <footer key=\"footer\">\n          {footnotes.map(function createFootnote(def) {\n            return (\n              <div id={slug(def.identifier, slugify)} key={def.identifier}>\n                {def.identifier}\n                {emitter(parser(def.footnote, { inline: true }))}\n              </div>\n            )\n          })}\n        </footer>\n      </div>\n    )\n  }\n\n  return jsx\n}\n\n/**\n * A simple HOC for easy React use. Feed the markdown content as a direct child\n * and the rest is taken care of automatically.\n */\nconst Markdown: React.FC<\n  Omit<React.HTMLAttributes<Element>, 'children'> & {\n    children: string\n    options?: MarkdownToJSX.Options\n  }\n> = ({ children = '', options, ...props }) => {\n  if (process.env.NODE_ENV !== 'production' && typeof children !== 'string') {\n    console.error(\n      'markdown-to-jsx: <Markdown> component only accepts a single string as a child, received:',\n      children\n    )\n  }\n\n  return React.cloneElement(\n    compiler(children, options),\n    props as React.JSX.IntrinsicAttributes\n  )\n}\n\nexport namespace MarkdownToJSX {\n  /**\n   * RequireAtLeastOne<{ ... }> <- only requires at least one key\n   */\n  type RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Pick<\n    T,\n    Exclude<keyof T, Keys>\n  > &\n    {\n      [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>\n    }[Keys]\n\n  export type CreateElement = typeof React.createElement\n\n  export type HTMLTags = keyof React.JSX.IntrinsicElements\n\n  export type State = {\n    /** true if the current content is inside anchor link grammar */\n    inAnchor?: boolean\n    /** true if parsing in an HTML context */\n    inHTML?: boolean\n    /** true if parsing in an inline context (subset of rules around formatting and links) */\n    inline?: boolean\n    /** true if in a table */\n    inTable?: boolean\n    /** use this for the `key` prop */\n    key?: React.Key\n    /** true if in a list */\n    list?: boolean\n    /** used for lookbacks */\n    prevCapture?: string\n    /** true if parsing in inline context w/o links */\n    simple?: boolean\n  }\n\n  export interface BlockQuoteNode {\n    alert?: string\n    children: MarkdownToJSX.ParserResult[]\n    type: typeof RuleType.blockQuote\n  }\n\n  export interface BreakLineNode {\n    type: typeof RuleType.breakLine\n  }\n\n  export interface BreakThematicNode {\n    type: typeof RuleType.breakThematic\n  }\n\n  export interface CodeBlockNode {\n    type: typeof RuleType.codeBlock\n    attrs?: React.JSX.IntrinsicAttributes\n    lang?: string\n    text: string\n  }\n\n  export interface CodeFencedNode {\n    type: typeof RuleType.codeFenced\n  }\n\n  export interface CodeInlineNode {\n    type: typeof RuleType.codeInline\n    text: string\n  }\n\n  export interface FootnoteNode {\n    type: typeof RuleType.footnote\n  }\n\n  export interface FootnoteReferenceNode {\n    type: typeof RuleType.footnoteReference\n    target: string\n    text: string\n  }\n\n  export interface GFMTaskNode {\n    type: typeof RuleType.gfmTask\n    completed: boolean\n  }\n\n  export interface HeadingNode {\n    type: typeof RuleType.heading\n    children: MarkdownToJSX.ParserResult[]\n    id: string\n    level: 1 | 2 | 3 | 4 | 5 | 6\n  }\n\n  export interface HeadingSetextNode {\n    type: typeof RuleType.headingSetext\n  }\n\n  export interface HTMLCommentNode {\n    type: typeof RuleType.htmlComment\n  }\n\n  export interface ImageNode {\n    type: typeof RuleType.image\n    alt?: string\n    target: string\n    title?: string\n  }\n\n  export interface LinkNode {\n    type: typeof RuleType.link\n    children: MarkdownToJSX.ParserResult[]\n    target: string\n    title?: string\n  }\n\n  export interface LinkAngleBraceNode {\n    type: typeof RuleType.linkAngleBraceStyleDetector\n  }\n\n  export interface LinkBareURLNode {\n    type: typeof RuleType.linkBareUrlDetector\n  }\n\n  export interface LinkMailtoNode {\n    type: typeof RuleType.linkMailtoDetector\n  }\n\n  export interface OrderedListNode {\n    type: typeof RuleType.orderedList\n    items: MarkdownToJSX.ParserResult[][]\n    ordered: true\n    start?: number\n  }\n\n  export interface UnorderedListNode {\n    type: typeof RuleType.unorderedList\n    items: MarkdownToJSX.ParserResult[][]\n    ordered: false\n  }\n\n  export interface NewlineNode {\n    type: typeof RuleType.newlineCoalescer\n  }\n\n  export interface ParagraphNode {\n    type: typeof RuleType.paragraph\n    children: MarkdownToJSX.ParserResult[]\n  }\n\n  export interface ReferenceNode {\n    type: typeof RuleType.ref\n  }\n\n  export interface ReferenceImageNode {\n    type: typeof RuleType.refImage\n    alt?: string\n    ref: string\n  }\n\n  export interface ReferenceLinkNode {\n    type: typeof RuleType.refLink\n    children: MarkdownToJSX.ParserResult[]\n    fallbackChildren: string\n    ref: string\n  }\n\n  export interface TableNode {\n    type: typeof RuleType.table\n    /**\n     * alignment for each table column\n     */\n    align: ('left' | 'right' | 'center')[]\n    cells: MarkdownToJSX.ParserResult[][][]\n    header: MarkdownToJSX.ParserResult[][]\n  }\n\n  export interface TableSeparatorNode {\n    type: typeof RuleType.tableSeparator\n  }\n\n  export interface TextNode {\n    type: typeof RuleType.text\n    text: string\n  }\n\n  export interface BoldTextNode {\n    type: typeof RuleType.textBolded\n    children: MarkdownToJSX.ParserResult[]\n  }\n\n  export interface ItalicTextNode {\n    type: typeof RuleType.textEmphasized\n    children: MarkdownToJSX.ParserResult[]\n  }\n\n  export interface EscapedTextNode {\n    type: typeof RuleType.textEscaped\n  }\n\n  export interface MarkedTextNode {\n    type: typeof RuleType.textMarked\n    children: MarkdownToJSX.ParserResult[]\n  }\n\n  export interface StrikethroughTextNode {\n    type: typeof RuleType.textStrikethroughed\n    children: MarkdownToJSX.ParserResult[]\n  }\n\n  export interface HTMLNode {\n    type: typeof RuleType.htmlBlock\n    attrs: React.JSX.IntrinsicAttributes\n    children?: ReturnType<MarkdownToJSX.NestedParser> | undefined\n    noInnerParse: Boolean\n    tag: MarkdownToJSX.HTMLTags\n    text?: string | undefined\n  }\n\n  export interface HTMLSelfClosingNode {\n    type: typeof RuleType.htmlSelfClosing\n    attrs: React.JSX.IntrinsicAttributes\n    tag: string\n  }\n\n  export type ParserResult =\n    | BlockQuoteNode\n    | BreakLineNode\n    | BreakThematicNode\n    | CodeBlockNode\n    | CodeFencedNode\n    | CodeInlineNode\n    | FootnoteNode\n    | FootnoteReferenceNode\n    | GFMTaskNode\n    | HeadingNode\n    | HeadingSetextNode\n    | HTMLCommentNode\n    | ImageNode\n    | LinkNode\n    | LinkAngleBraceNode\n    | LinkBareURLNode\n    | LinkMailtoNode\n    | OrderedListNode\n    | UnorderedListNode\n    | NewlineNode\n    | ParagraphNode\n    | ReferenceNode\n    | ReferenceImageNode\n    | ReferenceLinkNode\n    | TableNode\n    | TableSeparatorNode\n    | TextNode\n    | BoldTextNode\n    | ItalicTextNode\n    | EscapedTextNode\n    | MarkedTextNode\n    | StrikethroughTextNode\n    | HTMLNode\n    | HTMLSelfClosingNode\n\n  export type NestedParser = (\n    input: string,\n    state?: MarkdownToJSX.State\n  ) => MarkdownToJSX.ParserResult[]\n\n  export type Parser<ParserOutput> = (\n    capture: RegExpMatchArray,\n    nestedParse: NestedParser,\n    state?: MarkdownToJSX.State\n  ) => ParserOutput\n\n  export type RuleOutput = (\n    ast: MarkdownToJSX.ParserResult | MarkdownToJSX.ParserResult[],\n    state: MarkdownToJSX.State\n  ) => React.JSX.Element\n\n  export type Rule<ParserOutput = MarkdownToJSX.ParserResult> = {\n    _match: (\n      source: string,\n      state: MarkdownToJSX.State,\n      prevCapturedString?: string\n    ) => RegExpMatchArray\n    _order: (typeof Priority)[keyof typeof Priority]\n    _parse: MarkdownToJSX.Parser<Omit<ParserOutput, 'type'>>\n    /**\n     * Optional fast check that can quickly determine if this rule\n     * should even be attempted. Should check the start of the source string\n     * for quick patterns without expensive regex operations.\n     *\n     * @param source The input source string (already trimmed of leading whitespace)\n     * @param state Current parser state\n     * @returns true if the rule should be attempted, false to skip\n     */\n    _qualify?:\n      | string[]\n      | ((source: string, state: MarkdownToJSX.State) => boolean)\n    _render?: (\n      node: ParserOutput,\n      /**\n       * Continue rendering AST nodes if applicable.\n       */\n      render: RuleOutput,\n      state?: MarkdownToJSX.State\n    ) => React.ReactNode\n  }\n\n  export type Rules = {\n    [K in ParserResult['type']]: K extends typeof RuleType.table\n      ? Rule<Extract<ParserResult, { type: K | typeof RuleType.paragraph }>>\n      : Rule<Extract<ParserResult, { type: K }>>\n  }\n\n  export type Override =\n    | RequireAtLeastOne<{\n        component: React.ElementType\n        props: Object\n      }>\n    | React.ElementType\n\n  export type Overrides = {\n    [tag in HTMLTags]?: Override\n  } & {\n    [customComponent: string]: Override\n  }\n\n  export type Options = Partial<{\n    /**\n     * Ultimate control over the output of all rendered JSX.\n     */\n    createElement: (\n      tag: Parameters<CreateElement>[0],\n      props: React.JSX.IntrinsicAttributes,\n      ...children: React.ReactNode[]\n    ) => React.ReactNode\n\n    /**\n     * The library automatically generates an anchor tag for bare URLs included in the markdown\n     * document, but this behavior can be disabled if desired.\n     */\n    disableAutoLink: boolean\n\n    /**\n     * Disable the compiler's best-effort transcription of provided raw HTML\n     * into JSX-equivalent. This is the functionality that prevents the need to\n     * use `dangerouslySetInnerHTML` in React.\n     */\n    disableParsingRawHTML: boolean\n\n    /**\n     * Forces the compiler to have space between hash sign and the header text which\n     * is explicitly stated in the most of the markdown specs.\n     * https://github.github.com/gfm/#atx-heading\n     * `The opening sequence of # characters must be followed by a space or by the end of line.`\n     */\n    enforceAtxHeadings: boolean\n\n    /**\n     * Forces the compiler to always output content with a block-level wrapper\n     * (`<p>` or any block-level syntax your markdown already contains.)\n     */\n    forceBlock: boolean\n\n    /**\n     * Forces the compiler to always output content with an inline wrapper (`<span>`)\n     */\n    forceInline: boolean\n\n    /**\n     * Forces the compiler to wrap results, even if there is only a single\n     * child or no children.\n     */\n    forceWrapper: boolean\n\n    /**\n     * Supply additional HTML entity: unicode replacement mappings.\n     *\n     * Pass only the inner part of the entity as the key,\n     * e.g. `&le;` -> `{ \"le\": \"\\u2264\" }`\n     *\n     * By default\n     * the following entities are replaced with their unicode equivalents:\n     *\n     * ```\n     * &amp;\n     * &apos;\n     * &gt;\n     * &lt;\n     * &nbsp;\n     * &quot;\n     * ```\n     */\n    namedCodesToUnicode: {\n      [key: string]: string\n    }\n\n    /**\n     * Selectively control the output of particular HTML tags as they would be\n     * emitted by the compiler.\n     */\n    overrides: Overrides\n\n    /**\n     * Allows for full control over rendering of particular rules.\n     * For example, to implement a LaTeX renderer such as `react-katex`:\n     *\n     * ```\n     * renderRule(next, node, renderChildren, state) {\n     *   if (node.type === RuleType.codeBlock && node.lang === 'latex') {\n     *     return (\n     *       <TeX as=\"div\" key={state.key}>\n     *         {String.raw`${node.text}`}\n     *       </TeX>\n     *     )\n     *   }\n     *\n     *   return next();\n     * }\n     * ```\n     *\n     * Thar be dragons obviously, but you can do a lot with this\n     * (have fun!) To see how things work internally, check the `render`\n     * method in source for a particular rule.\n     */\n    renderRule: (\n      /** Resume normal processing, call this function as a fallback if you are not returning custom JSX. */\n      next: () => React.ReactNode,\n      /** the current AST node, use `RuleType` against `node.type` for identification */\n      node: ParserResult,\n      /** use as `renderChildren(node.children)` for block nodes */\n      renderChildren: RuleOutput,\n      /** contains `key` which should be supplied to the topmost JSX element */\n      state: State\n    ) => React.ReactNode\n\n    /**\n     * Override the built-in sanitizer function for URLs, etc if desired. The built-in version is available as a library export called `sanitizer`.\n     */\n    sanitizer: (\n      value: string,\n      tag: HTMLTags,\n      attribute: string\n    ) => string | null\n\n    /**\n     * Override normalization of non-URI-safe characters for use in generating\n     * HTML IDs for anchor linking purposes.\n     */\n    slugify: (input: string, defaultFn: (input: string) => string) => string\n\n    /**\n     * Declare the type of the wrapper to be used when there are multiple\n     * children to render. Set to `null` to get an array of children back\n     * without any wrapper, or use `React.Fragment` to get a React element\n     * that won't show up in the DOM.\n     */\n    wrapper: React.ElementType | null\n  }>\n}\n\nexport default Markdown\n"],"names":["RuleType","blockQuote","breakLine","breakThematic","codeBlock","codeFenced","codeInline","footnote","footnoteReference","gfmTask","heading","headingSetext","htmlBlock","htmlComment","htmlSelfClosing","image","link","linkAngleBraceStyleDetector","linkBareUrlDetector","linkMailtoDetector","newlineCoalescer","orderedList","paragraph","ref","refImage","refLink","table","tableSeparator","text","textBolded","textEmphasized","textEscaped","textMarked","textStrikethroughed","unorderedList","ATTRIBUTE_TO_JSX_PROP_MAP","reduce","obj","x","toLowerCase","class","for","namedCodesToUnicode","amp","apos","gt","lt","nbsp","quot","DO_NOT_PROCESS_HTML_ELEMENTS","ATTRIBUTES_TO_SANITIZE","ATTR_EXTRACTOR_R","AUTOLINK_MAILTO_CHECK_R","BLOCK_END_R","BLOCKQUOTE_R","BLOCKQUOTE_TRIM_LEFT_MULTILINE_R","BLOCKQUOTE_ALERT_R","BREAK_LINE_R","BREAK_THEMATIC_R","CODE_BLOCK_FENCED_R","CODE_BLOCK_R","CODE_INLINE_R","CONSECUTIVE_NEWLINE_R","CR_NEWLINE_R","FOOTNOTE_R","FOOTNOTE_REFERENCE_R","FORMFEED_R","FRONT_MATTER_R","GFM_TASK_R","HEADING_R","HEADING_ATX_COMPLIANT_R","HEADING_SETEXT_R","HTML_BLOCK_ELEMENT_R","HTML_CHAR_CODE_R","HTML_COMMENT_R","HTML_CUSTOM_ATTR_R","HTML_SELF_CLOSING_ELEMENT_R","INTERPOLATION_R","LINK_AUTOLINK_BARE_URL_R","LINK_AUTOLINK_MAILTO_R","LINK_AUTOLINK_R","CAPTURE_LETTER_AFTER_HYPHEN","NP_TABLE_R","PARAGRAPH_R","REFERENCE_IMAGE_OR_LINK","REFERENCE_IMAGE_R","REFERENCE_LINK_R","SHOULD_RENDER_AS_BLOCK_R","TAB_R","TABLE_TRIM_PIPES","TABLE_CENTER_ALIGN","TABLE_LEFT_ALIGN","TABLE_RIGHT_ALIGN","INLINE_SKIP_R","TEXT_BOLD_R","RegExp","TEXT_EMPHASIZED_R","TEXT_MARKED_R","TEXT_STRIKETHROUGHED_R","TEXT_ESCAPED_R","UNESCAPE_R","TEXT_PLAIN_R","TRIM_STARTING_NEWLINES","HTML_LEFT_TRIM_AMOUNT_R","LIST_LOOKBEHIND_R","ORDERED_LIST_BULLET","UNORDERED_LIST_BULLET","generateListItemPrefix","type","ORDERED_LIST_ITEM_PREFIX","UNORDERED_LIST_ITEM_PREFIX","generateListItemPrefixRegex","ORDERED_LIST_ITEM_PREFIX_R","UNORDERED_LIST_ITEM_PREFIX_R","generateListItemRegex","ORDERED_LIST_ITEM_R","UNORDERED_LIST_ITEM_R","generateListRegex","bullet","ORDERED_LIST_R","UNORDERED_LIST_R","generateListRule","h","ordered","LIST_R","LIST_ITEM_R","LIST_ITEM_PREFIX_R","_qualify","source","test","_match","allowInline","state","isStartOfLine","exec","prevCapture","list","inline","simple","_order","_parse","capture","parse","start","undefined","items","replace","match","lastItemWasAParagraph","map","item","i","space","length","spaceRegex","content","isLastItem","thisItemIsAParagraph","indexOf","adjustedContent","oldStateInline","oldStateList","trimEnd","result","_render","node","output","key","LINK_R","IMAGE_R","str","end","slice","startsWith","prefix","qualifies","qualify","Array","isArray","slugify","parseTableAlignCapture","alignCapture","parseTableRow","tableOutput","prevInTable","inTable","cells","acc","flush","cell","push","apply","trim","split","filter","Boolean","forEach","fragment","arr","parseTable","align","rowText","parseTableCells","header","children","getTableStyle","colIndex","textAlign","fn","inlineRegex","regex","simpleInlineRegex","blockRegex","anyScopeRegex","SANITIZE_R","sanitizer","input","decoded","decodeURIComponent","e","unescape","rawString","parseInline","isCurrentlyInline","isCurrentlySimple","parseSimpleInline","parseBlock","parseCaptureInline","captureNothing","renderNothing","cx","call","arguments","join","get","src","path","fb","ptr","frags","shift","getTag","tag","overrides","override","compiler","markdown","options","_extends","slug","sanitize","createElement","React","NON_PARAGRAPH_BLOCK_SYNTAXES","enforceAtxHeadings","BLOCK_SYNTAXES","concat","props","overrideProps","className","compile","forceInline","forceBlock","emitter","parser","pop","wrapper","jsx","forceWrapper","attrStringToMap","attributes","raw","delimiterIdx","_","letter","toUpperCase","normalizeAttributeKey","value","first","unquote","mappedKey","normalizedValue","sanitizeUrlFn","styleString","styles","buffer","inUrl","inQuotes","quoteChar","char","endsWith","declaration","colonIndex","parseStyleAttribute","_ref","substr","attributeValueToJSXPropValue","footnotes","refs","rules","_rules","_capture$0$replace$ma","alert","unshift","attrs","noInnerParse","__","lang","identifier","target","href","completed","checked","readOnly","id","level","_capture$3$match","trimmer","trimmed","parseFunc","some","r","tagName","ast","inAnchor","prevInHTML","inHTML","alt","title","disableAutoLink","address","every","line","captured","fallbackChildren","style","row","c","full","inner","disableParsingRawHTML","render","ruleList","Object","keys","nestedParse","ruleType","rule","substring","parsed","sort","a","b","normalizeWhitespace","parserFor","userRender","renderer","createRenderer","renderRule","patchedRender","oldKey","lastWasString","nodeOut","isString","def","_ref2","_ref2$children","_objectWithoutPropertiesLoose","_excluded","cloneElement"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1677, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'contexts'\n].AppRouterContext\n"],"names":["module","exports","require","vendored","AppRouterContext"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,WACD,CAACC,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1684, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'contexts'\n].HooksClientContext\n"],"names":["module","exports","require","vendored","HooksClientContext"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,WACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1691, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/router-reducer/reducers/get-segment-value.ts"],"sourcesContent":["import type { Segment } from '../../../../server/app-render/types'\n\nexport function getSegmentValue(segment: Segment) {\n  return Array.isArray(segment) ? segment[1] : segment\n}\n"],"names":["getSegmentValue","segment","Array","isArray"],"mappings":";;;;+BAEgBA,mBAAAA;;;eAAAA;;;AAAT,SAASA,gBAAgBC,OAAgB;IAC9C,OAAOC,MAAMC,OAAO,CAACF,WAAWA,OAAO,CAAC,EAAE,GAAGA;AAC/C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1716, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/shared/lib/segment.ts"],"sourcesContent":["import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n"],"names":["DEFAULT_SEGMENT_KEY","PAGE_SEGMENT_KEY","addSearchParamsIfPageSegment","isGroupSegment","isParallelRouteSegment","segment","endsWith","startsWith","searchParams","isPageSegment","includes","stringifiedQuery","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;IA4BaA,mBAAmB,EAAA;eAAnBA;;IADAC,gBAAgB,EAAA;eAAhBA;;IAhBGC,4BAA4B,EAAA;eAA5BA;;IATAC,cAAc,EAAA;eAAdA;;IAKAC,sBAAsB,EAAA;eAAtBA;;;AALT,SAASD,eAAeE,OAAe;IAC5C,sCAAsC;IACtC,OAAOA,OAAO,CAAC,EAAE,KAAK,OAAOA,QAAQC,QAAQ,CAAC;AAChD;AAEO,SAASF,uBAAuBC,OAAe;IACpD,OAAOA,QAAQE,UAAU,CAAC,QAAQF,YAAY;AAChD;AAEO,SAASH,6BACdG,OAAgB,EAChBG,YAA2D;IAE3D,MAAMC,gBAAgBJ,QAAQK,QAAQ,CAACT;IAEvC,IAAIQ,eAAe;QACjB,MAAME,mBAAmBC,KAAKC,SAAS,CAACL;QACxC,OAAOG,qBAAqB,OACxBV,mBAAmB,MAAMU,mBACzBV;IACN;IAEA,OAAOI;AACT;AAEO,MAAMJ,mBAAmB;AACzB,MAAMD,sBAAsB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1772, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/redirect-status-code.ts"],"sourcesContent":["export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n"],"names":["RedirectStatusCode"],"mappings":";;;;+BAAYA,sBAAAA;;;eAAAA;;;AAAL,IAAKA,qBAAAA,WAAAA,GAAAA,SAAAA,kBAAAA;;;;WAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1800, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/redirect-error.ts"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n"],"names":["REDIRECT_ERROR_CODE","RedirectType","isRedirectError","error","digest","split","errorCode","type","destination","slice","join","status","at","statusCode","Number","isNaN","RedirectStatusCode"],"mappings":";;;;;;;;;;;;;;;;IAEaA,mBAAmB,EAAA;eAAnBA;;IAEDC,YAAY,EAAA;eAAZA;;IAgBIC,eAAe,EAAA;eAAfA;;;oCApBmB;AAE5B,MAAMF,sBAAsB;AAE5B,IAAKC,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;;;WAAAA;;AAgBL,SAASC,gBAAgBC,KAAc;IAC5C,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,CAAE,CAAA,YAAYA,KAAI,KAClB,OAAOA,MAAMC,MAAM,KAAK,UACxB;QACA,OAAO;IACT;IAEA,MAAMA,SAASD,MAAMC,MAAM,CAACC,KAAK,CAAC;IAClC,MAAM,CAACC,WAAWC,KAAK,GAAGH;IAC1B,MAAMI,cAAcJ,OAAOK,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;IAC7C,MAAMC,SAASP,OAAOQ,EAAE,CAAC,CAAC;IAE1B,MAAMC,aAAaC,OAAOH;IAE1B,OACEL,cAAcN,uBACbO,CAAAA,SAAS,aAAaA,SAAS,MAAK,KACrC,OAAOC,gBAAgB,YACvB,CAACO,MAAMF,eACPA,cAAcG,oBAAAA,kBAAkB;AAEpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1856, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/redirect.ts"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n"],"names":["getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","permanentRedirect","redirect","actionAsyncStorage","window","require","undefined","url","type","statusCode","RedirectStatusCode","TemporaryRedirect","error","Error","REDIRECT_ERROR_CODE","digest","getStore","isAction","RedirectType","push","replace","PermanentRedirect","isRedirectError","split","slice","join","Number","at"],"mappings":";;;;;;;;;;;;;;;;;;;IAegBA,gBAAgB,EAAA;eAAhBA;;IA6EAC,8BAA8B,EAAA;eAA9BA;;IARAC,wBAAwB,EAAA;eAAxBA;;IARAC,uBAAuB,EAAA;eAAvBA;;IAhBAC,iBAAiB,EAAA;eAAjBA;;IAvBAC,QAAQ,EAAA;eAARA;;;oCArCmB;+BAM5B;AAEP,MAAMC,qBACJ,OAAOC,WAAW,cAEZC,QAAQ,2KACRF,kBAAkB,GACpBG;AAEC,SAAST,iBACdU,GAAW,EACXC,IAAkB,EAClBC,UAAqE;IAArEA,IAAAA,eAAAA,KAAAA,GAAAA,aAAiCC,oBAAAA,kBAAkB,CAACC,iBAAiB;IAErE,MAAMC,QAAQ,OAAA,cAA8B,CAA9B,IAAIC,MAAMC,eAAAA,mBAAmB,GAA7B,qBAAA;eAAA;oBAAA;sBAAA;IAA6B;IAC3CF,MAAMG,MAAM,GAAMD,eAAAA,mBAAmB,GAAC,MAAGN,OAAK,MAAGD,MAAI,MAAGE,aAAW;IACnE,OAAOG;AACT;AAcO,SAASV,SACd,2BAA2B,GAC3BK,GAAW,EACXC,IAAmB;QAEVL;IAATK,QAAAA,OAAAA,OAAAA,OAASL,CAAAA,sBAAAA,OAAAA,KAAAA,IAAAA,CAAAA,+BAAAA,mBAAoBa,QAAQ,EAAA,KAAA,OAAA,KAAA,IAA5Bb,6BAAgCc,QAAQ,IAC7CC,eAAAA,YAAY,CAACC,IAAI,GACjBD,eAAAA,YAAY,CAACE,OAAO;IAExB,MAAMvB,iBAAiBU,KAAKC,MAAME,oBAAAA,kBAAkB,CAACC,iBAAiB;AACxE;AAaO,SAASV,kBACd,2BAA2B,GAC3BM,GAAW,EACXC,IAAyC;IAAzCA,IAAAA,SAAAA,KAAAA,GAAAA,OAAqBU,eAAAA,YAAY,CAACE,OAAO;IAEzC,MAAMvB,iBAAiBU,KAAKC,MAAME,oBAAAA,kBAAkB,CAACW,iBAAiB;AACxE;AAUO,SAASrB,wBAAwBY,KAAc;IACpD,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ,OAAO;IAEpC,wEAAwE;IACxE,kBAAkB;IAClB,OAAOA,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAKC,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;AACnD;AAEO,SAAS1B,yBAAyBa,KAAoB;IAC3D,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ;QAC3B,MAAM,OAAA,cAAiC,CAAjC,IAAIC,MAAM,yBAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAgC;IACxC;IAEA,OAAOD,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE;AACtC;AAEO,SAASzB,+BAA+Bc,KAAoB;IACjE,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ;QAC3B,MAAM,OAAA,cAAiC,CAAjC,IAAIC,MAAM,yBAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAgC;IACxC;IAEA,OAAOa,OAAOd,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAKI,EAAE,CAAC,CAAC;AAC5C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1954, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/http-access-fallback/http-access-fallback.ts"],"sourcesContent":["export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n"],"names":["HTTPAccessErrorStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","getAccessFallbackErrorTypeByStatus","getAccessFallbackHTTPStatus","isHTTPAccessFallbackError","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","ALLOWED_CODES","Set","Object","values","error","digest","prefix","httpStatus","split","has","Number","status"],"mappings":";;;;;;;;;;;;;;;;;;IAAaA,qBAAqB,EAAA;eAArBA;;IAQAC,8BAA8B,EAAA;eAA9BA;;IAuCGC,kCAAkC,EAAA;eAAlCA;;IAPAC,2BAA2B,EAAA;eAA3BA;;IAnBAC,yBAAyB,EAAA;eAAzBA;;;AArBT,MAAMJ,wBAAwB;IACnCK,WAAW;IACXC,WAAW;IACXC,cAAc;AAChB;AAEA,MAAMC,gBAAgB,IAAIC,IAAIC,OAAOC,MAAM,CAACX;AAErC,MAAMC,iCAAiC;AAavC,SAASG,0BACdQ,KAAc;IAEd,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,CAAE,CAAA,YAAYA,KAAI,KAClB,OAAOA,MAAMC,MAAM,KAAK,UACxB;QACA,OAAO;IACT;IACA,MAAM,CAACC,QAAQC,WAAW,GAAGH,MAAMC,MAAM,CAACG,KAAK,CAAC;IAEhD,OACEF,WAAWb,kCACXO,cAAcS,GAAG,CAACC,OAAOH;AAE7B;AAEO,SAASZ,4BACdS,KAA8B;IAE9B,MAAMG,aAAaH,MAAMC,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,EAAE;IAC7C,OAAOE,OAAOH;AAChB;AAEO,SAASb,mCACdiB,MAAc;IAEd,OAAQA;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE;IACJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2030, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/not-found.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n"],"names":["notFound","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","error","Error","digest"],"mappings":";;;;+BAsBgBA,YAAAA;;;eAAAA;;;oCAnBT;AAEP;;;;;;;;;;;;;CAaC,GAED,MAAMC,SAAU,KAAEC,oBAAAA,8BAA8B,GAAC;AAE1C,SAASF;IACd,4CAA4C;IAC5C,MAAMG,QAAQ,OAAA,cAAiB,CAAjB,IAAIC,MAAMH,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BE,MAAkCE,MAAM,GAAGJ;IAE7C,MAAME;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2077, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/forbidden.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n"],"names":["forbidden","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","Error","error","digest"],"mappings":";;;;+BAqBgBA,aAAAA;;;eAAAA;;;oCAlBT;AAEP,6BAA6B;AAC7B;;;;;;;;;;;CAWC,GAED,MAAMC,SAAU,KAAEC,oBAAAA,8BAA8B,GAAC;AAE1C,SAASF;IACd,IAAI,CAACG,QAAQC,GAAG,CAACC,uBAAqC,YAAF;QAClD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACP,gHADG,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEA,4CAA4C;IAC5C,MAAMC,QAAQ,OAAA,cAAiB,CAAjB,IAAID,MAAML,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BM,MAAkCC,MAAM,GAAGP;IAC7C,MAAMM;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/unauthorized.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n"],"names":["unauthorized","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","Error","error","digest"],"mappings":";;;;+BAsBgBA,gBAAAA;;;eAAAA;;;oCAnBT;AAEP,gCAAgC;AAChC;;;;;;;;;;;;CAYC,GAED,MAAMC,SAAU,KAAEC,oBAAAA,8BAA8B,GAAC;AAE1C,SAASF;IACd,IAAI,CAACG,QAAQC,GAAG,CAACC,uBAAqC,YAAF;QAClD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACP,gHADG,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEA,4CAA4C;IAC5C,MAAMC,QAAQ,OAAA,cAAiB,CAAjB,IAAID,MAAML,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BM,MAAkCC,MAAM,GAAGP;IAC7C,MAAMM;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2184, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts"],"sourcesContent":["// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n"],"names":["BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","Error","constructor","reason","digest","err"],"mappings":"AAAA,+GAA+G;;;;;;;;;;;;;;;;IAIlGA,iBAAiB,EAAA;eAAjBA;;IASGC,mBAAmB,EAAA;eAAnBA;;;AAZhB,MAAMC,iBAAiB;AAGhB,MAAMF,0BAA0BG;IAGrCC,YAA4BC,MAAc,CAAE;QAC1C,KAAK,CAAE,wCAAqCA,SAAAA,IAAAA,CADlBA,MAAAA,GAAAA,QAAAA,IAAAA,CAFZC,MAAAA,GAASJ;IAIzB;AACF;AAGO,SAASD,oBAAoBM,GAAY;IAC9C,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2224, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/is-next-router-error.ts"],"sourcesContent":["import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n"],"names":["isNextRouterError","error","isRedirectError","isHTTPAccessFallbackError"],"mappings":";;;;+BAWgBA,qBAAAA;;;eAAAA;;;oCART;+BAC6C;AAO7C,SAASA,kBACdC,KAAc;IAEd,OAAOC,CAAAA,GAAAA,eAAAA,eAAe,EAACD,UAAUE,CAAAA,GAAAA,oBAAAA,yBAAyB,EAACF;AAC7D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/unstable-rethrow.browser.ts"],"sourcesContent":["import { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (isNextRouterError(error) || isBailoutToCSRError(error)) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n"],"names":["unstable_rethrow","error","isNextRouterError","isBailoutToCSRError","Error","cause"],"mappings":";;;;+BAGgBA,oBAAAA;;;eAAAA;;;8BAHoB;mCACF;AAE3B,SAASA,iBAAiBC,KAAc;IAC7C,IAAIC,CAAAA,GAAAA,mBAAAA,iBAAiB,EAACD,UAAUE,CAAAA,GAAAA,cAAAA,mBAAmB,EAACF,QAAQ;QAC1D,MAAMA;IACR;IAEA,IAAIA,iBAAiBG,SAAS,WAAWH,OAAO;QAC9CD,iBAAiBC,MAAMI,KAAK;IAC9B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2283, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/server/dynamic-rendering-utils.ts"],"sourcesContent":["export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(public readonly expression: string) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n"],"names":["isHangingPromiseRejectionError","makeHangingPromise","err","digest","HANGING_PROMISE_REJECTION","HangingPromiseRejectionError","Error","constructor","expression","abortListenersBySignal","WeakMap","signal","aborted","Promise","reject","hangingPromise","_","boundRejection","bind","currentListeners","get","push","listeners","set","addEventListener","i","length","once","catch","ignoreReject"],"mappings":";;;;;;;;;;;;;;;IAAgBA,8BAA8B,EAAA;eAA9BA;;IAgCAC,kBAAkB,EAAA;eAAlBA;;;AAhCT,SAASD,+BACdE,GAAY;IAEZ,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAIC,MAAM,KAAKC;AACxB;AAEA,MAAMA,4BAA4B;AAElC,MAAMC,qCAAqCC;IAGzCC,YAA4BC,UAAkB,CAAE;QAC9C,KAAK,CACH,CAAC,qBAAqB,EAAEA,WAAW,qGAAqG,EAAEA,WAAW,qJAAqJ,CAAC,GAAA,IAAA,CAFnRA,UAAAA,GAAAA,YAAAA,IAAAA,CAFZL,MAAAA,GAASC;IAMzB;AACF;AAGA,MAAMK,yBAAyB,IAAIC;AAS5B,SAAST,mBACdU,MAAmB,EACnBH,UAAkB;IAElB,IAAIG,OAAOC,OAAO,EAAE;QAClB,OAAOC,QAAQC,MAAM,CAAC,IAAIT,6BAA6BG;IACzD,OAAO;QACL,MAAMO,iBAAiB,IAAIF,QAAW,CAACG,GAAGF;YACxC,MAAMG,iBAAiBH,OAAOI,IAAI,CAChC,MACA,IAAIb,6BAA6BG;YAEnC,IAAIW,mBAAmBV,uBAAuBW,GAAG,CAACT;YAClD,IAAIQ,kBAAkB;gBACpBA,iBAAiBE,IAAI,CAACJ;YACxB,OAAO;gBACL,MAAMK,YAAY;oBAACL;iBAAe;gBAClCR,uBAAuBc,GAAG,CAACZ,QAAQW;gBACnCX,OAAOa,gBAAgB,CACrB,SACA;oBACE,IAAK,IAAIC,IAAI,GAAGA,IAAIH,UAAUI,MAAM,EAAED,IAAK;wBACzCH,SAAS,CAACG,EAAE;oBACd;gBACF,GACA;oBAAEE,MAAM;gBAAK;YAEjB;QACF;QACA,2GAA2G;QAC3G,6GAA6G;QAC7G,yFAAyF;QACzFZ,eAAea,KAAK,CAACC;QACrB,OAAOd;IACT;AACF;AAEA,SAASc,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2354, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/server/lib/router-utils/is-postpone.ts"],"sourcesContent":["const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n"],"names":["isPostpone","REACT_POSTPONE_TYPE","Symbol","for","error","$$typeof"],"mappings":";;;;+BAEgBA,cAAAA;;;eAAAA;;;AAFhB,MAAMC,sBAA8BC,OAAOC,GAAG,CAAC;AAExC,SAASH,WAAWI,KAAU;IACnC,OACE,OAAOA,UAAU,YACjBA,UAAU,QACVA,MAAMC,QAAQ,KAAKJ;AAEvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2373, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/hooks-server-context.ts"],"sourcesContent":["const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n"],"names":["DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","Error","constructor","description","digest","err"],"mappings":";;;;;;;;;;;;;;;IAEaA,kBAAkB,EAAA;eAAlBA;;IAQGC,oBAAoB,EAAA;eAApBA;;;AAVhB,MAAMC,qBAAqB;AAEpB,MAAMF,2BAA2BG;IAGtCC,YAA4BC,WAAmB,CAAE;QAC/C,KAAK,CAAE,2BAAwBA,cAAAA,IAAAA,CADLA,WAAAA,GAAAA,aAAAA,IAAAA,CAF5BC,MAAAA,GAAoCJ;IAIpC;AACF;AAEO,SAASD,qBAAqBM,GAAY;IAC/C,IACE,OAAOA,QAAQ,YACfA,QAAQ,QACR,CAAE,CAAA,YAAYA,GAAE,KAChB,OAAOA,IAAID,MAAM,KAAK,UACtB;QACA,OAAO;IACT;IAEA,OAAOC,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2419, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/static-generation-bailout.ts"],"sourcesContent":["const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n"],"names":["StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","Error","code","error"],"mappings":";;;;;;;;;;;;;;;IAEaA,qBAAqB,EAAA;eAArBA;;IAIGC,uBAAuB,EAAA;eAAvBA;;;AANhB,MAAMC,0BAA0B;AAEzB,MAAMF,8BAA8BG;;QAApC,KAAA,IAAA,OAAA,IAAA,CACWC,IAAAA,GAAOF;;AACzB;AAEO,SAASD,wBACdI,KAAc;IAEd,IAAI,OAAOA,UAAU,YAAYA,UAAU,QAAQ,CAAE,CAAA,UAAUA,KAAI,GAAI;QACrE,OAAO;IACT;IAEA,OAAOA,MAAMD,IAAI,KAAKF;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2465, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/lib/metadata/metadata-constants.tsx"],"sourcesContent":["export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\n"],"names":["METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME"],"mappings":";;;;;;;;;;;;;;;;IAAaA,sBAAsB,EAAA;eAAtBA;;IAEAC,oBAAoB,EAAA;eAApBA;;IADAC,sBAAsB,EAAA;eAAtBA;;;AADN,MAAMF,yBAAyB;AAC/B,MAAME,yBAAyB;AAC/B,MAAMD,uBAAuB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2499, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/lib/scheduler.ts"],"sourcesContent":["export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n"],"names":["atLeastOneTask","scheduleImmediate","scheduleOnNextTick","waitAtLeastOneReactRenderTask","cb","Promise","resolve","then","process","env","NEXT_RUNTIME","setTimeout","nextTick","setImmediate","r"],"mappings":";;;;;;;;;;;;;;;;;IA4CgBA,cAAc,EAAA;eAAdA;;IAbHC,iBAAiB,EAAA;eAAjBA;;IAtBAC,kBAAkB,EAAA;eAAlBA;;IAgDGC,6BAA6B,EAAA;eAA7BA;;;AAhDT,MAAMD,qBAAqB,CAAWE;IAC3C,6EAA6E;IAC7E,4EAA4E;IAC5E,uCAAuC;IACvC,EAAE;IACF,kLAAkL;IAClL,EAAE;IACFC,QAAQC,OAAO,GAAGC,IAAI,CAAC;QACrB,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;QAEzC,OAAO;YACLF,QAAQI,QAAQ,CAACR;QACnB;IACF;AACF;AAQO,MAAMH,oBAAoB,CAAWG;IAC1C,IAAII,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;IAEzC,OAAO;QACLG,aAAaT;IACf;AACF;AAOO,SAASJ;IACd,OAAO,IAAIK,QAAc,CAACC,UAAYL,kBAAkBK;AAC1D;AAWO,SAASH;IACd,IAAIK,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;IAEzC,OAAO;QACL,OAAO,IAAIL,QAAQ,CAACS,IAAMD,aAAaC;IACzC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2566, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/server/app-render/dynamic-rendering.ts"],"sourcesContent":["/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from '../../lib/metadata/metadata-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicExpression: undefined | string\n  syncDynamicErrorWithStack: null | Error\n  // Dev only\n  syncDynamicLogged?: boolean\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspendedDynamic: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasSyncDynamicErrors: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicExpression: undefined,\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspendedDynamic: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasSyncDynamicErrors: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender-ppr') {\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      workUnitStore.revalidate = 0\n\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */\nexport function trackFallbackParamAccessed(\n  store: WorkStore,\n  expression: string\n): void {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return\n\n  postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking)\n}\n\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(\n  _store: WorkStore,\n  workUnitStore: void | WorkUnitStore\n) {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      workUnitStore.revalidate = 0\n    }\n    if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicExpression = expression\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicExpression = expression\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n        if (prerenderStore.validating === true) {\n          // We always log Request Access in dev at the point of calling the function\n          // So we mark the dynamic validation as not requiring it to be printed\n          dynamicTracking.syncDynamicLogged = true\n        }\n      }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createPostponedAbortSignal(reason: string): AbortSignal {\n  assertPostpone()\n  const controller = new AbortController()\n  // We get our hands on a postpone instance by calling postpone and catching the throw\n  try {\n    React.unstable_postpone(reason)\n  } catch (x: unknown) {\n    controller.abort(x)\n  }\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: PrerenderStoreModern\n): AbortSignal {\n  const controller = new AbortController()\n\n  if (workUnitStore.cacheSignal) {\n    // If we have a cacheSignal it means we're in a prospective render. If the input\n    // we're waiting on is coming from another cache, we do want to wait for it so that\n    // we can resolve this cache entry too.\n    workUnitStore.cacheSignal.inputReady().then(() => {\n      controller.abort()\n    })\n  } else {\n    // Otherwise we're in the final render and we should already have all our caches\n    // filled. We might still be waiting on some microtasks so we wait one tick before\n    // giving up. When we give up, we still want to render the content of this cache\n    // as deeply as we can so that we can suspend as deeply as possible in the tree\n    // or not at all if we don't end up waiting for the input.\n    scheduleOnNextTick(() => controller.abort())\n  }\n\n  return controller.signal\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n\n  if (\n    workStore &&\n    workStore.isStaticGeneration &&\n    workStore.fallbackRouteParams &&\n    workStore.fallbackRouteParams.size > 0\n  ) {\n    // There are fallback route params, we should track these as dynamic\n    // accesses.\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (workUnitStore) {\n      // We're prerendering with dynamicIO or PPR or both\n      if (workUnitStore.type === 'prerender') {\n        // We are in a prerender with dynamicIO semantics\n        // We are going to hang here and never resolve. This will cause the currently\n        // rendering component to effectively be a dynamic hole\n        React.use(makeHangingPromise(workUnitStore.renderSignal, expression))\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // We're prerendering with PPR\n        postponeWithTracking(\n          workStore.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        throwToInterruptStaticGeneration(expression, workStore, workUnitStore)\n      }\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  route: string,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    dynamicValidation.hasSuspendedDynamic = true\n    return\n  } else if (\n    serverDynamic.syncDynamicErrorWithStack ||\n    clientDynamic.syncDynamicErrorWithStack\n  ) {\n    dynamicValidation.hasSyncDynamicErrors = true\n    return\n  } else {\n    const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\nfunction createErrorWithComponentStack(\n  message: string,\n  componentStack: string\n) {\n  const error = new Error(message)\n  error.stack = 'Error: ' + message + componentStack\n  return error\n}\n\nexport function throwIfDisallowedDynamic(\n  route: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): void {\n  let syncError: null | Error\n  let syncExpression: undefined | string\n  let syncLogged: boolean\n  if (serverDynamic.syncDynamicErrorWithStack) {\n    syncError = serverDynamic.syncDynamicErrorWithStack\n    syncExpression = serverDynamic.syncDynamicExpression!\n    syncLogged = serverDynamic.syncDynamicLogged === true\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    syncError = clientDynamic.syncDynamicErrorWithStack\n    syncExpression = clientDynamic.syncDynamicExpression!\n    syncLogged = clientDynamic.syncDynamicLogged === true\n  } else {\n    syncError = null\n    syncExpression = undefined\n    syncLogged = false\n  }\n\n  if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n    if (!syncLogged) {\n      // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n      // the offending sync error is logged before we exit the build\n      console.error(syncError)\n    }\n    // The actual error should have been logged when the sync access ocurred\n    throw new StaticGenBailoutError()\n  }\n\n  const dynamicErrors = dynamicValidation.dynamicErrors\n  if (dynamicErrors.length) {\n    for (let i = 0; i < dynamicErrors.length; i++) {\n      console.error(dynamicErrors[i])\n    }\n\n    throw new StaticGenBailoutError()\n  }\n\n  if (!dynamicValidation.hasSuspendedDynamic) {\n    if (dynamicValidation.hasDynamicMetadata) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    } else if (dynamicValidation.hasDynamicViewport) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    }\n  }\n}\n"],"names":["Postpone","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createHangingInputAbortSignal","createPostponedAbortSignal","formatDynamicAPIAccesses","getFirstDynamicReason","isDynamicPostpone","isPrerenderInterruptedError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackFallbackParamAccessed","trackSynchronousPlatformIOAccessInDev","trackSynchronousRequestDataAccessInDev","useDynamicRouteParams","hasPostpone","React","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicExpression","undefined","syncDynamicErrorWithStack","hasSuspendedDynamic","hasDynamicMetadata","hasDynamicViewport","hasSyncDynamicErrors","dynamicErrors","trackingState","expression","store","workUnitStore","type","forceDynamic","forceStatic","dynamicShouldError","StaticGenBailoutError","route","dynamicTracking","revalidate","err","DynamicServerError","dynamicUsageDescription","dynamicUsageStack","stack","process","env","NODE_ENV","usedDynamic","prerenderStore","workUnitAsyncStorage","getStore","_store","abortOnSynchronousDynamicDataAccess","reason","error","createPrerenderInterruptedError","controller","abort","push","Error","errorWithStack","requestStore","prerenderPhase","prerenderSignal","signal","aborted","validating","syncDynamicLogged","assertPostpone","createPostponeReason","message","isDynamicPostponeReason","includes","NEXT_PRERENDER_INTERRUPTED","digest","length","serverDynamic","clientDynamic","filter","access","map","split","slice","line","join","AbortController","x","cacheSignal","inputReady","then","scheduleOnNextTick","workStore","workAsyncStorage","isStaticGeneration","fallbackRouteParams","size","use","makeHangingPromise","renderSignal","hasSuspenseRegex","hasMetadataRegex","RegExp","METADATA_BOUNDARY_NAME","hasViewportRegex","VIEWPORT_BOUNDARY_NAME","hasOutletRegex","OUTLET_BOUNDARY_NAME","componentStack","dynamicValidation","test","createErrorWithComponentStack","syncError","syncExpression","syncLogged","console","i"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/unstable-rethrow.server.ts"],"sourcesContent":["import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n"],"names":["unstable_rethrow","error","isNextRouterError","isBailoutToCSRError","isDynamicServerError","isDynamicPostpone","isPostpone","isHangingPromiseRejectionError","Error","cause"],"mappings":";;;;+BAOgBA,oBAAAA;;;eAAAA;;;uCAP+B;4BACpB;8BACS;mCACF;kCACA;oCACG;AAE9B,SAASA,iBAAiBC,KAAc;IAC7C,IACEC,CAAAA,GAAAA,mBAAAA,iBAAiB,EAACD,UAClBE,CAAAA,GAAAA,cAAAA,mBAAmB,EAACF,UACpBG,CAAAA,GAAAA,oBAAAA,oBAAoB,EAACH,UACrBI,CAAAA,GAAAA,kBAAAA,iBAAiB,EAACJ,UAClBK,CAAAA,GAAAA,YAAAA,UAAU,EAACL,UACXM,CAAAA,GAAAA,uBAAAA,8BAA8B,EAACN,QAC/B;QACA,MAAMA;IACR;IAEA,IAAIA,iBAAiBO,SAAS,WAAWP,OAAO;QAC9CD,iBAAiBC,MAAMQ,KAAK;IAC9B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3154, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/unstable-rethrow.ts"],"sourcesContent":["/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n"],"names":["unstable_rethrow","window","require"],"mappings":"AAAA;;;;;;CAMC,GAAA;;;;+BACYA,oBAAAA;;;eAAAA;;;AAAN,MAAMA,mBACX,OAAOC,WAAW,cAEZC,QAAQ,wHACRF,gBAAgB,GAEhBE,QAAQ,yHACRF,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/navigation.react-server.ts"],"sourcesContent":["/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n"],"names":["ReadonlyURLSearchParams","RedirectType","forbidden","notFound","permanentRedirect","redirect","unauthorized","unstable_rethrow","ReadonlyURLSearchParamsError","Error","constructor","URLSearchParams","append","delete","set","sort"],"mappings":"AAAA,cAAc,GAAA;;;;;;;;;;;;;;;;;;;;;IAkCLA,uBAAuB,EAAA;eAAvBA;;IALAC,YAAY,EAAA;eAAZA,eAAAA,YAAY;;IAEZC,SAAS,EAAA;eAATA,WAAAA,SAAS;;IADTC,QAAQ,EAAA;eAARA,UAAAA,QAAQ;;IAFEC,iBAAiB,EAAA;eAAjBA,UAAAA,iBAAiB;;IAA3BC,QAAQ,EAAA;eAARA,UAAAA,QAAQ;;IAIRC,YAAY,EAAA;eAAZA,cAAAA,YAAY;;IACZC,gBAAgB,EAAA;eAAhBA,iBAAAA,gBAAgB;;;0BALmB;+BACf;0BACJ;2BACC;8BACG;iCACI;AAhCjC,MAAMC,qCAAqCC;IACzCC,aAAc;QACZ,KAAK,CACH;IAEJ;AACF;AAEA,MAAMV,gCAAgCW;IACpC,wKAAwK,GACxKC,SAAS;QACP,MAAM,IAAIJ;IACZ;IACA,wKAAwK,GACxKK,SAAS;QACP,MAAM,IAAIL;IACZ;IACA,wKAAwK,GACxKM,MAAM;QACJ,MAAM,IAAIN;IACZ;IACA,wKAAwK,GACxKO,OAAO;QACL,MAAM,IAAIP;IACZ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3266, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'contexts'\n].ServerInsertedHtml\n"],"names":["module","exports","require","vendored","ServerInsertedHtml"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,WACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3273, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/bailout-to-client-rendering.ts"],"sourcesContent":["import { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external'\n\nexport function bailoutToClientRendering(reason: string): void | never {\n  const workStore = workAsyncStorage.getStore()\n\n  if (workStore?.forceStatic) return\n\n  if (workStore?.isStaticGeneration) throw new BailoutToCSRError(reason)\n}\n"],"names":["bailoutToClientRendering","reason","workStore","workAsyncStorage","getStore","forceStatic","isStaticGeneration","BailoutToCSRError"],"mappings":";;;;+BAGgBA,4BAAAA;;;eAAAA;;;8BAHkB;0CACD;AAE1B,SAASA,yBAAyBC,MAAc;IACrD,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAE3C,IAAIF,aAAAA,OAAAA,KAAAA,IAAAA,UAAWG,WAAW,EAAE;IAE5B,IAAIH,aAAAA,OAAAA,KAAAA,IAAAA,UAAWI,kBAAkB,EAAE,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACN,SAAtB,qBAAA;eAAA;oBAAA;sBAAA;IAA4B;AACvE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3306, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/src/client/components/navigation.ts"],"sourcesContent":["import type { FlightRouterState } from '../../server/app-render/types'\nimport type { Params } from '../../server/request/params'\n\nimport { useContext, useMemo } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './navigation.react-server'\n\nconst useDynamicRouteParams =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/dynamic-rendering') as typeof import('../../server/app-render/dynamic-rendering')\n      ).useDynamicRouteParams\n    : undefined\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { bailoutToClientRendering } =\n      require('./bailout-to-client-rendering') as typeof import('./bailout-to-client-rendering')\n    // TODO-APP: handle dynamic = 'force-static' here and on the client\n    bailoutToClientRendering('useSearchParams()')\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams?.('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  return useContext(PathnameContext) as string\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams?.('useParams()')\n\n  return useContext(PathParamsContext) as T\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\n// Client components API\nfunction getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams?.('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  return getSelectedLayoutSegmentPath(context.parentTree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams?.('useSelectedLayoutSegment()')\n\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n    return null\n  }\n\n  const selectedLayoutSegment =\n    parallelRouteKey === 'children'\n      ? selectedLayoutSegments[0]\n      : selectedLayoutSegments[selectedLayoutSegments.length - 1]\n\n  // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n  // and returning an internal value like `__DEFAULT__` would be confusing.\n  return selectedLayoutSegment === DEFAULT_SEGMENT_KEY\n    ? null\n    : selectedLayoutSegment\n}\n\n// Shared components APIs\nexport {\n  notFound,\n  forbidden,\n  unauthorized,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n"],"names":["ReadonlyURLSearchParams","RedirectType","ServerInsertedHTMLContext","forbidden","notFound","permanentRedirect","redirect","unauthorized","unstable_rethrow","useParams","usePathname","useRouter","useSearchParams","useSelectedLayoutSegment","useSelectedLayoutSegments","useServerInsertedHTML","useDynamicRouteParams","window","require","undefined","searchParams","useContext","SearchParamsContext","readonlySearchParams","useMemo","bailoutToClientRendering","PathnameContext","router","AppRouterContext","Error","PathParamsContext","getSelectedLayoutSegmentPath","tree","parallelRouteKey","first","segmentPath","node","parallelRoutes","children","Object","values","segment","segmentValue","getSegmentValue","startsWith","PAGE_SEGMENT_KEY","push","context","LayoutRouterContext","parentTree","selectedLayoutSegments","length","selectedLayoutSegment","DEFAULT_SEGMENT_KEY"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3491, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kolag/Desktop/nextjs-15-course-main%20%281%29/nextjs-15-course-main/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}